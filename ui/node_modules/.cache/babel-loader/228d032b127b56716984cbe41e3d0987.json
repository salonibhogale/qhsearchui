{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar state_1 = require(\"../state\");\n\nvar StatefulAccessor_1 = require(\"./StatefulAccessor\");\n\nvar BaseQueryAccessor =\n/** @class */\nfunction (_super) {\n  __extends(BaseQueryAccessor, _super);\n\n  function BaseQueryAccessor(key) {\n    var _this = _super.call(this, key) || this;\n\n    _this.state = new state_1.ValueState();\n    return _this;\n  }\n\n  BaseQueryAccessor.prototype.keepOnlyQueryState = function () {\n    this.setQueryString(this.getQueryString(), true);\n  };\n\n  BaseQueryAccessor.prototype.setQueryString = function (queryString, withReset) {\n    if (withReset === void 0) {\n      withReset = false;\n    }\n\n    if (withReset) {\n      this.searchkit.resetState();\n    }\n\n    this.state = this.state.setValue(queryString);\n  };\n\n  BaseQueryAccessor.prototype.getQueryString = function () {\n    return this.state.getValue();\n  };\n\n  return BaseQueryAccessor;\n}(StatefulAccessor_1.StatefulAccessor);\n\nexports.BaseQueryAccessor = BaseQueryAccessor;\n\nvar NoopQueryAccessor =\n/** @class */\nfunction (_super) {\n  __extends(NoopQueryAccessor, _super);\n\n  function NoopQueryAccessor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NoopQueryAccessor.prototype.keepOnlyQueryState = function () {\n    console.warn('keepOnlyQueryState called, No Query Accessor exists');\n  };\n\n  NoopQueryAccessor.prototype.setQueryString = function () {\n    console.warn('setQueryString called, No Query Accessor exists');\n  };\n\n  NoopQueryAccessor.prototype.getQueryString = function () {\n    console.warn('getQueryString called, No Query Accessor exists');\n    return '';\n  };\n\n  return NoopQueryAccessor;\n}(BaseQueryAccessor);\n\nexports.NoopQueryAccessor = NoopQueryAccessor;\nexports.noopQueryAccessor = new NoopQueryAccessor(null);","map":{"version":3,"sources":["../../../src/core/accessors/BaseQueryAccessor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AACrC,WAAA,iBAAA,CAAY,GAAZ,EAAe;AAAf,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,GAAN,KAAU,IADZ;;AAEE,IAAA,KAAI,CAAC,KAAL,GAAa,IAAI,OAAA,CAAA,UAAJ,EAAb;;AACD;;AAED,EAAA,iBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,SAAK,cAAL,CAAoB,KAAK,cAAL,EAApB,EAA2C,IAA3C;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,WAAf,EAA4B,SAA5B,EAA6C;AAAjB,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,SAAA,GAAA,KAAA;AAAiB;;AAC3C,QAAI,SAAJ,EAAe;AACb,WAAK,SAAL,CAAe,UAAf;AACD;;AACD,SAAK,KAAL,GAAa,KAAK,KAAL,CAAW,QAAX,CAAoB,WAApB,CAAb;AACD,GALD;;AAOA,EAAA,iBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAL,CAAW,QAAX,EAAP;AACD,GAFD;;AAGF,SAAA,iBAAA;AAAC,CApBD,CAAuC,kBAAA,CAAA,gBAAvC,CAAA;;AAAa,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAsBb,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAAvC,WAAA,iBAAA,GAAA;;AAaC;;AAZC,EAAA,iBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,IAAA,OAAO,CAAC,IAAR,CAAa,qDAAb;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,IAAA,OAAO,CAAC,IAAR,CAAa,iDAAb;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,IAAA,OAAO,CAAC,IAAR,CAAa,iDAAb;AACA,WAAO,EAAP;AACD,GAHD;;AAIF,SAAA,iBAAA;AAAC,CAbD,CAAuC,iBAAvC,CAAA;;AAAa,OAAA,CAAA,iBAAA,GAAA,iBAAA;AAeA,OAAA,CAAA,iBAAA,GAAoB,IAAI,iBAAJ,CAAsB,IAAtB,CAApB","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar state_1 = require(\"../state\");\nvar StatefulAccessor_1 = require(\"./StatefulAccessor\");\nvar BaseQueryAccessor = /** @class */ (function (_super) {\n    __extends(BaseQueryAccessor, _super);\n    function BaseQueryAccessor(key) {\n        var _this = _super.call(this, key) || this;\n        _this.state = new state_1.ValueState();\n        return _this;\n    }\n    BaseQueryAccessor.prototype.keepOnlyQueryState = function () {\n        this.setQueryString(this.getQueryString(), true);\n    };\n    BaseQueryAccessor.prototype.setQueryString = function (queryString, withReset) {\n        if (withReset === void 0) { withReset = false; }\n        if (withReset) {\n            this.searchkit.resetState();\n        }\n        this.state = this.state.setValue(queryString);\n    };\n    BaseQueryAccessor.prototype.getQueryString = function () {\n        return this.state.getValue();\n    };\n    return BaseQueryAccessor;\n}(StatefulAccessor_1.StatefulAccessor));\nexports.BaseQueryAccessor = BaseQueryAccessor;\nvar NoopQueryAccessor = /** @class */ (function (_super) {\n    __extends(NoopQueryAccessor, _super);\n    function NoopQueryAccessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopQueryAccessor.prototype.keepOnlyQueryState = function () {\n        console.warn('keepOnlyQueryState called, No Query Accessor exists');\n    };\n    NoopQueryAccessor.prototype.setQueryString = function () {\n        console.warn('setQueryString called, No Query Accessor exists');\n    };\n    NoopQueryAccessor.prototype.getQueryString = function () {\n        console.warn('getQueryString called, No Query Accessor exists');\n        return '';\n    };\n    return NoopQueryAccessor;\n}(BaseQueryAccessor));\nexports.NoopQueryAccessor = NoopQueryAccessor;\nexports.noopQueryAccessor = new NoopQueryAccessor(null);\n//# sourceMappingURL=BaseQueryAccessor.js.map"]},"metadata":{},"sourceType":"script"}