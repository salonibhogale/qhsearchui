{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { uncontrollable } from 'uncontrollable';\nimport chainFunction from './utils/createChainedFunction';\nimport { map } from './utils/ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButtonGroup.prototype;\n\n  _proto.getValues = function getValues() {\n    var value = this.props.value;\n    return value == null ? [] : [].concat(value);\n  };\n\n  _proto.handleToggle = function handleToggle(value, event) {\n    var _this$props = this.props,\n        type = _this$props.type,\n        onChange = _this$props.onChange;\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(value, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }), event);\n    } else {\n      onChange([].concat(values, [value]), event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        type = _this$props2.type,\n        name = _this$props2.name,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"type\", \"name\"]);\n\n    delete props.onChange;\n    delete props.value;\n    var values = this.getValues();\n    !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n    return React.createElement(ButtonGroup, _extends({}, props, {\n      toggle: true\n    }), map(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler(e) {\n        return _this.handleToggle(value, e);\n      };\n\n      return React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: chainFunction(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(React.Component);\n\nToggleButtonGroup.defaultProps = defaultProps;\nvar UncontrolledToggleButtonGroup = uncontrollable(ToggleButtonGroup, {\n  value: 'onChange'\n});\nUncontrolledToggleButtonGroup.Button = ToggleButton;\nexport default UncontrolledToggleButtonGroup;","map":{"version":3,"sources":["/Users/mohitkumar/github/qhsearch/new_qhsearch/node_modules/react-bootstrap/esm/ToggleButtonGroup.js"],"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","React","invariant","uncontrollable","chainFunction","map","ButtonGroup","ToggleButton","defaultProps","type","ToggleButtonGroup","_React$Component","apply","arguments","_proto","prototype","getValues","value","props","concat","handleToggle","event","_this$props","onChange","values","isActive","indexOf","filter","n","render","_this","_this$props2","children","name","process","env","NODE_ENV","createElement","toggle","child","_child$props","handler","e","cloneElement","checked","Component","UncontrolledToggleButtonGroup","Button"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { uncontrollable } from 'uncontrollable';\nimport chainFunction from './utils/createChainedFunction';\nimport { map } from './utils/ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButtonGroup.prototype;\n\n  _proto.getValues = function getValues() {\n    var value = this.props.value;\n    return value == null ? [] : [].concat(value);\n  };\n\n  _proto.handleToggle = function handleToggle(value, event) {\n    var _this$props = this.props,\n        type = _this$props.type,\n        onChange = _this$props.onChange;\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(value, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }), event);\n    } else {\n      onChange([].concat(values, [value]), event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        type = _this$props2.type,\n        name = _this$props2.name,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"type\", \"name\"]);\n\n    delete props.onChange;\n    delete props.value;\n    var values = this.getValues();\n    !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n    return React.createElement(ButtonGroup, _extends({}, props, {\n      toggle: true\n    }), map(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler(e) {\n        return _this.handleToggle(value, e);\n      };\n\n      return React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: chainFunction(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(React.Component);\n\nToggleButtonGroup.defaultProps = defaultProps;\nvar UncontrolledToggleButtonGroup = uncontrollable(ToggleButtonGroup, {\n  value: 'onChange'\n});\nUncontrolledToggleButtonGroup.Button = ToggleButton;\nexport default UncontrolledToggleButtonGroup;"]},"metadata":{},"sourceType":"module"}