{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n  _inherits(Truncate, _Component);\n\n  function Truncate() {\n    var _ref;\n\n    _classCallCheck(this, Truncate);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {};\n    _this.styles = {\n      ellipsis: {\n        position: 'fixed',\n        visibility: 'hidden',\n        top: 0,\n        left: 0\n      }\n    };\n    _this.elements = {};\n    _this.onResize = _this.onResize.bind(_this);\n    _this.onTruncate = _this.onTruncate.bind(_this);\n    _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n    _this.measureWidth = _this.measureWidth.bind(_this);\n    _this.getLines = _this.getLines.bind(_this);\n    _this.renderLine = _this.renderLine.bind(_this);\n    return _this;\n  }\n\n  _createClass(Truncate, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var text = this.elements.text,\n          calcTargetWidth = this.calcTargetWidth,\n          onResize = this.onResize;\n      var canvas = document.createElement('canvas');\n      this.canvasContext = canvas.getContext('2d');\n      calcTargetWidth(function () {\n        // Node not needed in document tree to read its content\n        if (text) {\n          text.parentNode.removeChild(text);\n        }\n      });\n      window.addEventListener('resize', onResize);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // Render was based on outdated refs and needs to be rerun\n      if (this.props.children !== prevProps.children) {\n        this.forceUpdate();\n      } // If the width prop has changed, recalculate size of contents\n\n\n      if (this.props.width !== prevProps.width) {\n        this.calcTargetWidth();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var ellipsis = this.elements.ellipsis,\n          onResize = this.onResize,\n          timeout = this.timeout;\n      ellipsis.parentNode.removeChild(ellipsis);\n      window.removeEventListener('resize', onResize);\n      window.cancelAnimationFrame(timeout);\n    } // Shim innerText to consistently break lines at <br/> but not at \\n\n\n  }, {\n    key: 'innerText',\n    value: function innerText(node) {\n      var div = document.createElement('div');\n      var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n      div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n      var text = div[contentKey];\n      var test = document.createElement('div');\n      test.innerHTML = 'foo<br/>bar';\n\n      if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n        div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n        text = div[contentKey];\n      }\n\n      return text;\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      this.calcTargetWidth();\n    }\n  }, {\n    key: 'onTruncate',\n    value: function onTruncate(didTruncate) {\n      var onTruncate = this.props.onTruncate;\n\n      if (typeof onTruncate === 'function') {\n        this.timeout = window.requestAnimationFrame(function () {\n          onTruncate(didTruncate);\n        });\n      }\n    }\n  }, {\n    key: 'calcTargetWidth',\n    value: function calcTargetWidth(callback) {\n      var target = this.elements.target,\n          calcTargetWidth = this.calcTargetWidth,\n          canvasContext = this.canvasContext,\n          width = this.props.width; // Calculation is no longer relevant, since node has been removed\n\n      if (!target) {\n        return;\n      }\n\n      var targetWidth = width || // Floor the result to deal with browser subpixel precision\n      Math.floor(target.parentNode.getBoundingClientRect().width); // Delay calculation until parent node is inserted to the document\n      // Mounting order in React is ChildComponent, ParentComponent\n\n      if (!targetWidth) {\n        return window.requestAnimationFrame(function () {\n          return calcTargetWidth(callback);\n        });\n      }\n\n      var style = window.getComputedStyle(target);\n      var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n      canvasContext.font = font;\n      this.setState({\n        targetWidth: targetWidth\n      }, callback);\n    }\n  }, {\n    key: 'measureWidth',\n    value: function measureWidth(text) {\n      return this.canvasContext.measureText(text).width;\n    }\n  }, {\n    key: 'ellipsisWidth',\n    value: function ellipsisWidth(node) {\n      return node.offsetWidth;\n    }\n  }, {\n    key: 'trimRight',\n    value: function trimRight(text) {\n      return text.replace(/\\s+$/, '');\n    }\n  }, {\n    key: 'getLines',\n    value: function getLines() {\n      var elements = this.elements,\n          _props = this.props,\n          numLines = _props.lines,\n          ellipsis = _props.ellipsis,\n          trimWhitespace = _props.trimWhitespace,\n          targetWidth = this.state.targetWidth,\n          innerText = this.innerText,\n          measureWidth = this.measureWidth,\n          onTruncate = this.onTruncate,\n          trimRight = this.trimRight;\n      var lines = [];\n      var text = innerText(elements.text);\n      var textLines = text.split('\\n').map(function (line) {\n        return line.split(' ');\n      });\n      var didTruncate = true;\n      var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n      for (var line = 1; line <= numLines; line++) {\n        var textWords = textLines[0]; // Handle newline\n\n        if (textWords.length === 0) {\n          lines.push();\n          textLines.shift();\n          line--;\n          continue;\n        }\n\n        var resultLine = textWords.join(' ');\n\n        if (measureWidth(resultLine) <= targetWidth) {\n          if (textLines.length === 1) {\n            // Line is end of text and fits without truncating\n            didTruncate = false;\n            lines.push(resultLine);\n            break;\n          }\n        }\n\n        if (line === numLines) {\n          // Binary search determining the longest possible line inluding truncate string\n          var textRest = textWords.join(' ');\n          var lower = 0;\n          var upper = textRest.length - 1;\n\n          while (lower <= upper) {\n            var middle = Math.floor((lower + upper) / 2);\n            var testLine = textRest.slice(0, middle + 1);\n\n            if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n              lower = middle + 1;\n            } else {\n              upper = middle - 1;\n            }\n          }\n\n          var lastLineText = textRest.slice(0, lower);\n\n          if (trimWhitespace) {\n            lastLineText = trimRight(lastLineText); // Remove blank lines from the end of text\n\n            while (!lastLineText.length && lines.length) {\n              var prevLine = lines.pop();\n              lastLineText = trimRight(prevLine);\n            }\n          }\n\n          resultLine = React.createElement('span', null, lastLineText, ellipsis);\n        } else {\n          // Binary search determining when the line breaks\n          var _lower = 0;\n\n          var _upper = textWords.length - 1;\n\n          while (_lower <= _upper) {\n            var _middle = Math.floor((_lower + _upper) / 2);\n\n            var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n            if (measureWidth(_testLine) <= targetWidth) {\n              _lower = _middle + 1;\n            } else {\n              _upper = _middle - 1;\n            }\n          } // The first word of this line is too long to fit it\n\n\n          if (_lower === 0) {\n            // Jump to processing of last line\n            line = numLines - 1;\n            continue;\n          }\n\n          resultLine = textWords.slice(0, _lower).join(' ');\n          textLines[0].splice(0, _lower);\n        }\n\n        lines.push(resultLine);\n      }\n\n      onTruncate(didTruncate);\n      return lines;\n    }\n  }, {\n    key: 'renderLine',\n    value: function renderLine(line, i, arr) {\n      if (i === arr.length - 1) {\n        return React.createElement('span', {\n          key: i\n        }, line);\n      } else {\n        var br = React.createElement('br', {\n          key: i + 'br'\n        });\n\n        if (line) {\n          return [React.createElement('span', {\n            key: i\n          }, line), br];\n        } else {\n          return br;\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var target = this.elements.target,\n          _props2 = this.props,\n          children = _props2.children,\n          ellipsis = _props2.ellipsis,\n          lines = _props2.lines,\n          spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n          targetWidth = this.state.targetWidth,\n          getLines = this.getLines,\n          renderLine = this.renderLine,\n          onTruncate = this.onTruncate;\n\n      var text = void 0;\n      var mounted = !!(target && targetWidth);\n\n      if (typeof window !== 'undefined' && mounted) {\n        if (lines > 0) {\n          text = getLines().map(renderLine);\n        } else {\n          text = children;\n          onTruncate(false);\n        }\n      }\n\n      delete spanProps.onTruncate;\n      delete spanProps.trimWhitespace;\n      return React.createElement('span', _extends({}, spanProps, {\n        ref: function ref(targetEl) {\n          _this2.elements.target = targetEl;\n        }\n      }), React.createElement('span', null, text), React.createElement('span', {\n        ref: function ref(textEl) {\n          _this2.elements.text = textEl;\n        }\n      }, children), React.createElement('span', {\n        ref: function ref(ellipsisEl) {\n          _this2.elements.ellipsis = ellipsisEl;\n        },\n        style: this.styles.ellipsis\n      }, ellipsis));\n    }\n  }]);\n\n  return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n  children: PropTypes.node,\n  ellipsis: PropTypes.node,\n  lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n  trimWhitespace: PropTypes.bool,\n  width: PropTypes.number,\n  onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n  children: '',\n  ellipsis: '…',\n  lines: 1,\n  trimWhitespace: false,\n  width: 0\n};\nexport default Truncate;\n;","map":{"version":3,"sources":["/Users/mohitkumar/github/qhsearch/new_qhsearch/node_modules/react-truncate/lib/Truncate.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","React","Component","PropTypes","Truncate","_Component","_ref","_len","args","Array","_key","_this","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","componentDidMount","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","componentDidUpdate","prevProps","children","forceUpdate","width","componentWillUnmount","timeout","removeEventListener","cancelAnimationFrame","innerText","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","ellipsisWidth","offsetWidth","trimRight","_props","numLines","lines","trimWhitespace","textLines","split","map","line","textWords","push","shift","resultLine","textRest","lower","upper","middle","testLine","slice","lastLineText","prevLine","pop","_lower","_upper","_middle","_testLine","splice","arr","br","render","_this2","_props2","spanProps","mounted","ref","targetEl","textEl","ellipsisEl","propTypes","oneOfType","oneOf","number","bool","func","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n"]},"metadata":{},"sourceType":"module"}