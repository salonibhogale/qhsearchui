{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar query_1 = require(\"./query\");\n\nvar accessors_1 = require(\"./accessors\");\n\nvar AccessorManager_1 = require(\"./AccessorManager\");\n\nvar transport_1 = require(\"./transport\");\n\nvar SearchRequest_1 = require(\"./SearchRequest\");\n\nvar support_1 = require(\"./support\");\n\nvar history_1 = require(\"./history\");\n\nvar defaults = require('lodash/defaults');\n\nvar constant = require('lodash/constant');\n\nvar identity = require('lodash/identity');\n\nvar map = require('lodash/map');\n\nvar isEqual = require('lodash/isEqual');\n\nvar get = require('lodash/get');\n\nvar SearchkitManager =\n/** @class */\nfunction () {\n  function SearchkitManager(host, options, initialState) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (initialState === void 0) {\n      initialState = {};\n    }\n\n    this.options = defaults(options, {\n      useHistory: true,\n      httpHeaders: {},\n      searchOnLoad: true,\n      defaultSize: 20,\n      createHistory: history_1.createHistoryInstance,\n      getLocation: function () {\n        return typeof window !== 'undefined' && window.location;\n      }\n    });\n    this.host = host;\n    this.guidGenerator = new support_1.GuidGenerator();\n    this.results = initialState.results;\n    this.state = initialState.state || {};\n    this.transport = this.options.transport || new transport_1.AxiosESTransport(host, {\n      headers: this.options.httpHeaders,\n      basicAuth: this.options.basicAuth,\n      searchUrlPath: this.options.searchUrlPath,\n      timeout: this.options.timeout,\n      withCredentials: this.options.withCredentials\n    });\n    this.accessors = new AccessorManager_1.AccessorManager();\n    this.accessors.add(new accessors_1.PageSizeAccessor(this.options.defaultSize));\n    this.registrationCompleted = new Promise(function (resolve) {\n      _this.completeRegistration = resolve;\n    });\n    this.translateFunction = constant(undefined);\n    this.queryProcessor = identity;\n\n    this.shouldPerformSearch = function () {\n      return true;\n    };\n\n    this.query = new query_1.ImmutableQuery();\n    this.emitter = new support_1.EventEmitter();\n    this.resultsEmitter = new support_1.EventEmitter();\n  }\n\n  SearchkitManager.mock = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var searchkit = new SearchkitManager('/', __assign({\n      useHistory: false,\n      transport: new transport_1.MockESTransport()\n    }, options));\n    searchkit.setupListeners();\n    return searchkit;\n  };\n\n  SearchkitManager.prototype.setupListeners = function () {\n    this.initialLoading = !this.results;\n\n    if (this.options.useHistory) {\n      this.unlistenHistory();\n      this.history = this.options.createHistory();\n      this.listenToHistory();\n    }\n\n    this.runInitialSearch();\n  };\n\n  SearchkitManager.prototype.addAccessor = function (accessor) {\n    accessor.setSearchkitManager(this);\n    return this.accessors.add(accessor);\n  };\n\n  SearchkitManager.prototype.removeAccessor = function (accessor) {\n    this.accessors.remove(accessor);\n  };\n\n  SearchkitManager.prototype.addDefaultQuery = function (fn) {\n    return this.addAccessor(new accessors_1.AnonymousAccessor(fn));\n  };\n\n  SearchkitManager.prototype.setQueryProcessor = function (fn) {\n    this.queryProcessor = fn;\n  };\n\n  SearchkitManager.prototype.translate = function (key) {\n    return this.translateFunction(key);\n  };\n\n  SearchkitManager.prototype.buildQuery = function () {\n    return this.accessors.buildQuery();\n  };\n\n  SearchkitManager.prototype.resetState = function () {\n    this.accessors.resetState();\n  };\n\n  SearchkitManager.prototype.addResultsListener = function (fn) {\n    return this.resultsEmitter.addListener(fn);\n  };\n\n  SearchkitManager.prototype.unlistenHistory = function () {\n    if (this.options.useHistory && this._unlistenHistory) {\n      this._unlistenHistory();\n    }\n  };\n\n  SearchkitManager.prototype.listenToHistory = function () {\n    var _this = this;\n\n    this._unlistenHistory = this.history.listen(function (location, action) {\n      if (action === 'POP') {\n        _this._searchWhenCompleted(location);\n      }\n    });\n  };\n\n  SearchkitManager.prototype._searchWhenCompleted = function (location) {\n    var _this = this;\n\n    this.registrationCompleted.then(function () {\n      _this.searchFromUrlQuery(location.search);\n    }).catch(function (e) {\n      console.error(e);\n    });\n  };\n\n  SearchkitManager.prototype.runInitialSearch = function () {\n    if (this.options.searchOnLoad) {\n      this._searchWhenCompleted(this.options.getLocation());\n    }\n  };\n\n  SearchkitManager.prototype.searchFromUrlQuery = function (query) {\n    query = history_1.decodeObjString(query.replace(/^\\?/, ''));\n    this.accessors.setState(query);\n    return this._search();\n  };\n\n  SearchkitManager.prototype.performSearch = function (replaceState, notifyState) {\n    if (replaceState === void 0) {\n      replaceState = false;\n    }\n\n    if (notifyState === void 0) {\n      notifyState = true;\n    }\n\n    if (notifyState && !isEqual(this.accessors.getState(), this.state)) {\n      this.accessors.notifyStateChange(this.state);\n    }\n\n    var searchPromise = this._search();\n\n    if (this.options.useHistory) {\n      var historyMethod = replaceState ? this.history.replace : this.history.push;\n      var url = this.options.getLocation().pathname + '?' + history_1.encodeObjUrl(this.state);\n      historyMethod.call(this.history, url);\n    }\n\n    return searchPromise;\n  };\n\n  SearchkitManager.prototype.buildSearchUrl = function (extraParams) {\n    if (extraParams === void 0) {\n      extraParams = {};\n    }\n\n    var params = defaults(extraParams, this.state || this.accessors.getState());\n    return this.options.getLocation().pathname + '?' + history_1.encodeObjUrl(params);\n  };\n\n  SearchkitManager.prototype.reloadSearch = function () {\n    delete this.query;\n    return this.performSearch();\n  };\n\n  SearchkitManager.prototype.search = function (replaceState) {\n    if (replaceState === void 0) {\n      replaceState = false;\n    }\n\n    return this.performSearch(replaceState);\n  };\n\n  SearchkitManager.prototype.getResultsAndState = function () {\n    return {\n      results: this.results,\n      state: this.state\n    };\n  };\n\n  SearchkitManager.prototype._search = function () {\n    var _this = this;\n\n    this.state = this.accessors.getState();\n    var query = this.buildQuery();\n\n    if (!this.shouldPerformSearch(query)) {\n      return Promise.resolve(this.getResultsAndState());\n    }\n\n    if (this.results && this.query && isEqual(query.getJSON(), this.query.getJSON())) {\n      return Promise.resolve(this.getResultsAndState());\n    }\n\n    this.query = query;\n    this.loading = true;\n    this.emitter.trigger();\n    var queryObject = this.queryProcessor(this.query.getJSON());\n    this.currentSearchRequest && this.currentSearchRequest.deactivate();\n    this.currentSearchRequest = new SearchRequest_1.SearchRequest(this.transport, queryObject, this);\n    return this.currentSearchRequest.run().then(function () {\n      return _this.getResultsAndState();\n    });\n  };\n\n  SearchkitManager.prototype.setResults = function (results) {\n    this.compareResults(this.results, results);\n    this.results = results;\n    this.error = null;\n    this.accessors.setResults(results);\n    this.onResponseChange();\n    this.resultsEmitter.trigger(this.results);\n  };\n\n  SearchkitManager.prototype.compareResults = function (previousResults, results) {\n    var ids = map(get(results, ['hits', 'hits'], []), '_id').join(',');\n    var previousIds = get(previousResults, ['hits', 'ids'], '');\n\n    if (results.hits) {\n      results.hits.ids = ids;\n      results.hits.hasChanged = !(ids && ids === previousIds);\n    }\n  };\n\n  SearchkitManager.prototype.guid = function (prefix) {\n    return this.guidGenerator.guid(prefix);\n  };\n\n  SearchkitManager.prototype.getHits = function () {\n    return get(this.results, ['hits', 'hits'], []);\n  };\n\n  SearchkitManager.prototype.getHitsCount = function () {\n    var hitsCount = get(this.results, ['hits', 'total'], 0);\n\n    if (typeof hitsCount === 'object') {\n      return hitsCount.value;\n    }\n\n    return hitsCount;\n  };\n\n  SearchkitManager.prototype.getTime = function () {\n    return get(this.results, 'took', 0);\n  };\n\n  SearchkitManager.prototype.getSuggestions = function () {\n    return get(this.results, ['suggest', 'suggestions'], {});\n  };\n\n  SearchkitManager.prototype.getQueryAccessor = function () {\n    return this.accessors.queryAccessor;\n  };\n\n  SearchkitManager.prototype.getAccessorsByType = function (type) {\n    return this.accessors.getAccessorsByType(type);\n  };\n\n  SearchkitManager.prototype.getAccessorByType = function (type) {\n    return this.accessors.getAccessorByType(type);\n  };\n\n  SearchkitManager.prototype.hasHits = function () {\n    return this.getHitsCount() > 0;\n  };\n\n  SearchkitManager.prototype.hasHitsChanged = function () {\n    return get(this.results, ['hits', 'hasChanged'], true);\n  };\n\n  SearchkitManager.prototype.setError = function (error) {\n    this.error = error;\n    console.error(this.error);\n    this.results = null;\n    this.accessors.setResults(null);\n    this.onResponseChange();\n  };\n\n  SearchkitManager.prototype.onResponseChange = function () {\n    this.loading = false;\n    this.initialLoading = false;\n    this.emitter.trigger();\n  };\n\n  return SearchkitManager;\n}();\n\nexports.SearchkitManager = SearchkitManager;","map":{"version":3,"sources":["../../src/core/SearchkitManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar query_1 = require(\"./query\");\nvar accessors_1 = require(\"./accessors\");\nvar AccessorManager_1 = require(\"./AccessorManager\");\nvar transport_1 = require(\"./transport\");\nvar SearchRequest_1 = require(\"./SearchRequest\");\nvar support_1 = require(\"./support\");\nvar history_1 = require(\"./history\");\nvar defaults = require('lodash/defaults');\nvar constant = require('lodash/constant');\nvar identity = require('lodash/identity');\nvar map = require('lodash/map');\nvar isEqual = require('lodash/isEqual');\nvar get = require('lodash/get');\nvar SearchkitManager = /** @class */ (function () {\n    function SearchkitManager(host, options, initialState) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (initialState === void 0) { initialState = {}; }\n        this.options = defaults(options, {\n            useHistory: true,\n            httpHeaders: {},\n            searchOnLoad: true,\n            defaultSize: 20,\n            createHistory: history_1.createHistoryInstance,\n            getLocation: function () { return typeof window !== 'undefined' && window.location; }\n        });\n        this.host = host;\n        this.guidGenerator = new support_1.GuidGenerator();\n        this.results = initialState.results;\n        this.state = initialState.state || {};\n        this.transport =\n            this.options.transport ||\n                new transport_1.AxiosESTransport(host, {\n                    headers: this.options.httpHeaders,\n                    basicAuth: this.options.basicAuth,\n                    searchUrlPath: this.options.searchUrlPath,\n                    timeout: this.options.timeout,\n                    withCredentials: this.options.withCredentials\n                });\n        this.accessors = new AccessorManager_1.AccessorManager();\n        this.accessors.add(new accessors_1.PageSizeAccessor(this.options.defaultSize));\n        this.registrationCompleted = new Promise(function (resolve) {\n            _this.completeRegistration = resolve;\n        });\n        this.translateFunction = constant(undefined);\n        this.queryProcessor = identity;\n        this.shouldPerformSearch = function () { return true; };\n        this.query = new query_1.ImmutableQuery();\n        this.emitter = new support_1.EventEmitter();\n        this.resultsEmitter = new support_1.EventEmitter();\n    }\n    SearchkitManager.mock = function (options) {\n        if (options === void 0) { options = {}; }\n        var searchkit = new SearchkitManager('/', __assign({ useHistory: false, transport: new transport_1.MockESTransport() }, options));\n        searchkit.setupListeners();\n        return searchkit;\n    };\n    SearchkitManager.prototype.setupListeners = function () {\n        this.initialLoading = !this.results;\n        if (this.options.useHistory) {\n            this.unlistenHistory();\n            this.history = this.options.createHistory();\n            this.listenToHistory();\n        }\n        this.runInitialSearch();\n    };\n    SearchkitManager.prototype.addAccessor = function (accessor) {\n        accessor.setSearchkitManager(this);\n        return this.accessors.add(accessor);\n    };\n    SearchkitManager.prototype.removeAccessor = function (accessor) {\n        this.accessors.remove(accessor);\n    };\n    SearchkitManager.prototype.addDefaultQuery = function (fn) {\n        return this.addAccessor(new accessors_1.AnonymousAccessor(fn));\n    };\n    SearchkitManager.prototype.setQueryProcessor = function (fn) {\n        this.queryProcessor = fn;\n    };\n    SearchkitManager.prototype.translate = function (key) {\n        return this.translateFunction(key);\n    };\n    SearchkitManager.prototype.buildQuery = function () {\n        return this.accessors.buildQuery();\n    };\n    SearchkitManager.prototype.resetState = function () {\n        this.accessors.resetState();\n    };\n    SearchkitManager.prototype.addResultsListener = function (fn) {\n        return this.resultsEmitter.addListener(fn);\n    };\n    SearchkitManager.prototype.unlistenHistory = function () {\n        if (this.options.useHistory && this._unlistenHistory) {\n            this._unlistenHistory();\n        }\n    };\n    SearchkitManager.prototype.listenToHistory = function () {\n        var _this = this;\n        this._unlistenHistory = this.history.listen(function (location, action) {\n            if (action === 'POP') {\n                _this._searchWhenCompleted(location);\n            }\n        });\n    };\n    SearchkitManager.prototype._searchWhenCompleted = function (location) {\n        var _this = this;\n        this.registrationCompleted\n            .then(function () {\n            _this.searchFromUrlQuery(location.search);\n        })\n            .catch(function (e) {\n            console.error(e);\n        });\n    };\n    SearchkitManager.prototype.runInitialSearch = function () {\n        if (this.options.searchOnLoad) {\n            this._searchWhenCompleted(this.options.getLocation());\n        }\n    };\n    SearchkitManager.prototype.searchFromUrlQuery = function (query) {\n        query = history_1.decodeObjString(query.replace(/^\\?/, ''));\n        this.accessors.setState(query);\n        return this._search();\n    };\n    SearchkitManager.prototype.performSearch = function (replaceState, notifyState) {\n        if (replaceState === void 0) { replaceState = false; }\n        if (notifyState === void 0) { notifyState = true; }\n        if (notifyState && !isEqual(this.accessors.getState(), this.state)) {\n            this.accessors.notifyStateChange(this.state);\n        }\n        var searchPromise = this._search();\n        if (this.options.useHistory) {\n            var historyMethod = replaceState ? this.history.replace : this.history.push;\n            var url = this.options.getLocation().pathname + '?' + history_1.encodeObjUrl(this.state);\n            historyMethod.call(this.history, url);\n        }\n        return searchPromise;\n    };\n    SearchkitManager.prototype.buildSearchUrl = function (extraParams) {\n        if (extraParams === void 0) { extraParams = {}; }\n        var params = defaults(extraParams, this.state || this.accessors.getState());\n        return this.options.getLocation().pathname + '?' + history_1.encodeObjUrl(params);\n    };\n    SearchkitManager.prototype.reloadSearch = function () {\n        delete this.query;\n        return this.performSearch();\n    };\n    SearchkitManager.prototype.search = function (replaceState) {\n        if (replaceState === void 0) { replaceState = false; }\n        return this.performSearch(replaceState);\n    };\n    SearchkitManager.prototype.getResultsAndState = function () {\n        return {\n            results: this.results,\n            state: this.state\n        };\n    };\n    SearchkitManager.prototype._search = function () {\n        var _this = this;\n        this.state = this.accessors.getState();\n        var query = this.buildQuery();\n        if (!this.shouldPerformSearch(query)) {\n            return Promise.resolve(this.getResultsAndState());\n        }\n        if (this.results && this.query && isEqual(query.getJSON(), this.query.getJSON())) {\n            return Promise.resolve(this.getResultsAndState());\n        }\n        this.query = query;\n        this.loading = true;\n        this.emitter.trigger();\n        var queryObject = this.queryProcessor(this.query.getJSON());\n        this.currentSearchRequest && this.currentSearchRequest.deactivate();\n        this.currentSearchRequest = new SearchRequest_1.SearchRequest(this.transport, queryObject, this);\n        return this.currentSearchRequest.run().then(function () { return _this.getResultsAndState(); });\n    };\n    SearchkitManager.prototype.setResults = function (results) {\n        this.compareResults(this.results, results);\n        this.results = results;\n        this.error = null;\n        this.accessors.setResults(results);\n        this.onResponseChange();\n        this.resultsEmitter.trigger(this.results);\n    };\n    SearchkitManager.prototype.compareResults = function (previousResults, results) {\n        var ids = map(get(results, ['hits', 'hits'], []), '_id').join(',');\n        var previousIds = get(previousResults, ['hits', 'ids'], '');\n        if (results.hits) {\n            results.hits.ids = ids;\n            results.hits.hasChanged = !(ids && ids === previousIds);\n        }\n    };\n    SearchkitManager.prototype.guid = function (prefix) {\n        return this.guidGenerator.guid(prefix);\n    };\n    SearchkitManager.prototype.getHits = function () {\n        return get(this.results, ['hits', 'hits'], []);\n    };\n    SearchkitManager.prototype.getHitsCount = function () {\n        var hitsCount = get(this.results, ['hits', 'total'], 0);\n        if (typeof hitsCount === 'object') {\n            return hitsCount.value;\n        }\n        return hitsCount;\n    };\n    SearchkitManager.prototype.getTime = function () {\n        return get(this.results, 'took', 0);\n    };\n    SearchkitManager.prototype.getSuggestions = function () {\n        return get(this.results, ['suggest', 'suggestions'], {});\n    };\n    SearchkitManager.prototype.getQueryAccessor = function () {\n        return this.accessors.queryAccessor;\n    };\n    SearchkitManager.prototype.getAccessorsByType = function (type) {\n        return this.accessors.getAccessorsByType(type);\n    };\n    SearchkitManager.prototype.getAccessorByType = function (type) {\n        return this.accessors.getAccessorByType(type);\n    };\n    SearchkitManager.prototype.hasHits = function () {\n        return this.getHitsCount() > 0;\n    };\n    SearchkitManager.prototype.hasHitsChanged = function () {\n        return get(this.results, ['hits', 'hasChanged'], true);\n    };\n    SearchkitManager.prototype.setError = function (error) {\n        this.error = error;\n        console.error(this.error);\n        this.results = null;\n        this.accessors.setResults(null);\n        this.onResponseChange();\n    };\n    SearchkitManager.prototype.onResponseChange = function () {\n        this.loading = false;\n        this.initialLoading = false;\n        this.emitter.trigger();\n    };\n    return SearchkitManager;\n}());\nexports.SearchkitManager = SearchkitManager;\n//# sourceMappingURL=SearchkitManager.js.map"]},"metadata":{},"sourceType":"script"}