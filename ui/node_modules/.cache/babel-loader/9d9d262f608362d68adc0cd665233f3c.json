{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _class = _interopRequireDefault(require(\"dom-helpers/class\"));\n\nvar _style = _interopRequireDefault(require(\"dom-helpers/style\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/util/scrollbarSize\"));\n\nvar _isOverflowing = _interopRequireDefault(require(\"./utils/isOverflowing\"));\n\nvar _manageAriaHidden = require(\"./utils/manageAriaHidden\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n  });\n  return idx;\n}\n/**\n * Proper state managment for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = (0, _scrollbarSize.default)();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden' // we are only interested in the actual `style` here\n      // becasue we will override it\n\n    };\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt((0, _style.default)(container, 'paddingRight') || 0, 10) + this.scrollbarSize + \"px\";\n    }\n\n    (0, _style.default)(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var style = containerState.style;\n    Object.keys(style).forEach(function (key) {\n      container.style[key] = style[key];\n    });\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      (0, _manageAriaHidden.hideSiblings)(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      //right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: (0, _isOverflowing.default)(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(_class.default.addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(_class.default.removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        (0, _manageAriaHidden.showSiblings)(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      //otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      (0, _manageAriaHidden.ariaHidden)(false, dialog);\n      (0, _manageAriaHidden.ariaHidden)(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nvar _default = ModalManager;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/mohitkumar/github/qhsearch/new_qhsearch/ui/node_modules/react-overlays/ModalManager.js"],"names":["exports","__esModule","default","_class","_interopRequireDefault","require","_style","_scrollbarSize","_isOverflowing","_manageAriaHidden","obj","findIndexOf","arr","cb","idx","some","d","i","ModalManager","_temp","_ref","_ref$hideSiblingNodes","hideSiblingNodes","_ref$handleContainerO","handleContainerOverflow","modals","containers","data","scrollbarSize","_proto","prototype","isContainerOverflowing","modal","containerIndexFromModal","overflowing","indexOf","setContainerStyle","containerState","container","style","overflow","paddingRight","parseInt","removeContainerStyle","Object","keys","forEach","key","add","className","modalIdx","containerIdx","length","push","hideSiblings","classes","split","addClass","bind","remove","splice","removeClass","showSiblings","_data$modals","backdrop","dialog","ariaHidden","isTopModal","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _class = _interopRequireDefault(require(\"dom-helpers/class\"));\n\nvar _style = _interopRequireDefault(require(\"dom-helpers/style\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/util/scrollbarSize\"));\n\nvar _isOverflowing = _interopRequireDefault(require(\"./utils/isOverflowing\"));\n\nvar _manageAriaHidden = require(\"./utils/manageAriaHidden\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n  });\n  return idx;\n}\n/**\n * Proper state managment for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager =\n/*#__PURE__*/\nfunction () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = (0, _scrollbarSize.default)();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden' // we are only interested in the actual `style` here\n      // becasue we will override it\n\n    };\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt((0, _style.default)(container, 'paddingRight') || 0, 10) + this.scrollbarSize + \"px\";\n    }\n\n    (0, _style.default)(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var style = containerState.style;\n    Object.keys(style).forEach(function (key) {\n      container.style[key] = style[key];\n    });\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      (0, _manageAriaHidden.hideSiblings)(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      //right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: (0, _isOverflowing.default)(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(_class.default.addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(_class.default.removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        (0, _manageAriaHidden.showSiblings)(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      //otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      (0, _manageAriaHidden.ariaHidden)(false, dialog);\n      (0, _manageAriaHidden.ariaHidden)(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nvar _default = ModalManager;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}