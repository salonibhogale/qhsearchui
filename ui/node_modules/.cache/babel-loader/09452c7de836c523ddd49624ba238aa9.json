{"ast":null,"code":"var _jsxFileName = \"/Users/salonibhogale/qhsearchui/src/Components/datefilter/DateRangeFilter.tsx\";\nimport * as React from \"react\";\nimport * as moment from \"moment\";\nimport { SearchkitComponent, RenderComponentPropType, renderComponent, Panel } from \"searchkit\";\nimport { DateRangeAccessor } from \"./DateRangeAccessor\";\nimport { defaults, get } from \"lodash\"; // For testing without a calendar component. Accepts date math.\n\nexport class DateRangeFilterInput extends SearchkitComponent {\n  constructor(...args) {\n    super(...args);\n    this.refs = void 0;\n\n    this.handleDateFinished = event => {\n      const {\n        onFinished\n      } = this.props;\n      const newState = {\n        fromDate: this.refs.dateFromInput.value,\n        toDate: this.refs.dateToInput.value\n      };\n      onFinished(newState);\n    };\n  }\n\n  render() {\n    const {\n      fromDate,\n      toDate\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"date-from\",\n      ref: \"dateFromInput\",\n      defaultValue: fromDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"date-to\",\n      ref: \"dateToInput\",\n      defaultValue: toDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"date-submit\",\n      onClick: this.handleDateFinished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"OK\"));\n  }\n\n}\nexport class DateRangeFilter extends SearchkitComponent {\n  constructor(props) {\n    super(props);\n    this.accessor = void 0;\n\n    this.handleClearState = () => {\n      this.accessor.resetState();\n    };\n\n    this.setCalendarState = newValues => {\n      if (!newValues.fromDate) {\n        this.accessor.resetState();\n      } else {\n        this.accessor.state = this.accessor.state.setValue(newValues);\n      }\n    };\n\n    this.calendarUpdate = newValues => {\n      this.setCalendarState(newValues);\n    };\n\n    this.calendarUpdateAndSearch = newValues => {\n      this.calendarUpdate(newValues);\n      this.searchkit.performSearch();\n    };\n  }\n\n  defineAccessor() {\n    const {\n      id,\n      title,\n      fromDate,\n      toDate,\n      fromDateField,\n      toDateField,\n      fieldOptions,\n      rangeFormatter\n    } = this.props;\n    return new DateRangeAccessor(id, {\n      id,\n      fromDate,\n      toDate,\n      fromDateField,\n      toDateField,\n      title,\n      fieldOptions,\n      rangeFormatter,\n      onClearState: this.handleClearState\n    });\n  }\n\n  defineBEMBlocks() {\n    let block = this.props.mod || \"sk-date-range-filter\";\n    return {\n      container: block,\n      labels: block + \"-value-labels\"\n    };\n  }\n\n  getCalendarComponent() {\n    const {\n      calendarComponent\n    } = this.props;\n    return calendarComponent || DateRangeFilterInput;\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      containerComponent\n    } = this.props;\n    return renderComponent(containerComponent, {\n      title,\n      className: id ? `filter--${id}` : undefined,\n      disabled: this.accessor.isDisabled()\n    }, this.renderCalendarComponent(this.getCalendarComponent()));\n  }\n\n  renderCalendarComponent(component) {\n    const {\n      fromDate,\n      toDate,\n      rangeFormatter\n    } = this.props;\n    const state = this.accessor.state.getValue();\n    return renderComponent(component, {\n      fromDate: state.fromDate || fromDate,\n      toDate: state.toDate || toDate,\n      fromDateValue: get(state, \"fromDate\", fromDate),\n      toDateValue: get(state, \"toDate\", toDate),\n      items: this.accessor.getBuckets(),\n      onChange: this.calendarUpdate,\n      onFinished: this.calendarUpdateAndSearch,\n      rangeFormatter\n    });\n  }\n\n}\nDateRangeFilter.propTypes = defaults({\n  fromDate: React.PropTypes.object,\n  toDate: React.PropTypes.object,\n  fromDateField: React.PropTypes.string.isRequired,\n  toDateField: React.PropTypes.string.isRequired,\n  title: React.PropTypes.string.isRequired,\n  id: React.PropTypes.string.isRequired,\n  containerComponent: RenderComponentPropType,\n  calendarComponent: RenderComponentPropType,\n  rangeFormatter: React.PropTypes.func,\n  fieldOptions: React.PropTypes.shape({\n    type: React.PropTypes.oneOf([\"embedded\", \"nested\", \"children\"]).isRequired,\n    options: React.PropTypes.object\n  })\n}, SearchkitComponent.propTypes);\nDateRangeFilter.defaultProps = {\n  containerComponent: Panel,\n  rangeFormatter: v => moment(parseInt(\"\" + v)).format('D.M.YYYY')\n};","map":{"version":3,"sources":["/Users/salonibhogale/qhsearchui/src/Components/datefilter/DateRangeFilter.tsx"],"names":["React","moment","SearchkitComponent","RenderComponentPropType","renderComponent","Panel","DateRangeAccessor","defaults","get","DateRangeFilterInput","refs","handleDateFinished","event","onFinished","props","newState","fromDate","dateFromInput","value","toDate","dateToInput","render","DateRangeFilter","constructor","accessor","handleClearState","resetState","setCalendarState","newValues","state","setValue","calendarUpdate","calendarUpdateAndSearch","searchkit","performSearch","defineAccessor","id","title","fromDateField","toDateField","fieldOptions","rangeFormatter","onClearState","defineBEMBlocks","block","mod","container","labels","getCalendarComponent","calendarComponent","containerComponent","className","undefined","disabled","isDisabled","renderCalendarComponent","component","getValue","fromDateValue","toDateValue","items","getBuckets","onChange","propTypes","PropTypes","object","string","isRequired","func","shape","type","oneOf","options","defaultProps","v","parseInt","format"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as moment from \"moment\";\n\nimport {\n  SearchkitComponent,\n  SearchkitComponentProps,\n  RenderComponentType,\n  RenderComponentPropType,\n  renderComponent,\n  FieldOptions,\n  Panel\n} from \"searchkit\"\n\nimport {\n  DateRangeAccessor,\n} from \"./DateRangeAccessor\"\n\n\nimport {\n  defaults,\n  map,\n  get\n} from \"lodash\"\n\n\n// For testing without a calendar component. Accepts date math.\nexport class DateRangeFilterInput extends SearchkitComponent<any, any> {\n  refs: {\n    [key: string]: any;\n    dateFromInput: any;\n    dateToInput: any;\n  }\n\n  handleDateFinished = (event) => {\n    const { onFinished } = this.props\n    const newState = {\n      fromDate: this.refs.dateFromInput.value,\n      toDate: this.refs.dateToInput.value\n    }\n    onFinished(newState)\n  }\n\n  render() {\n    const { fromDate, toDate } = this.props\n\n    return (\n      <div>\n        <input id=\"date-from\" ref=\"dateFromInput\" defaultValue={fromDate} />\n        <input id=\"date-to\" ref=\"dateToInput\" defaultValue={toDate} />\n        <button id=\"date-submit\" onClick={this.handleDateFinished}>OK</button>\n      </div>\n    )\n  }\n}\n\n\nexport interface DateRangeFilterProps extends SearchkitComponentProps {\n  fromDateField:string\n  toDateField:string\n  fromDate?:moment.Moment\n  toDate?:moment.Moment\n  id:string\n  title:string\n  interval?:number\n  containerComponent?: RenderComponentType<any>\n  calendarComponent?: RenderComponentType<any>\n  rangeFormatter?:(count:number)=> number | string\n  fieldOptions?:FieldOptions\n}\n\n\nexport class DateRangeFilter extends SearchkitComponent<DateRangeFilterProps, any> {\n  accessor:DateRangeAccessor\n\n  static propTypes = defaults({\n    fromDate:React.PropTypes.object,\n    toDate:React.PropTypes.object,\n    fromDateField:React.PropTypes.string.isRequired,\n    toDateField:React.PropTypes.string.isRequired,\n    title:React.PropTypes.string.isRequired,\n    id:React.PropTypes.string.isRequired,\n    containerComponent:RenderComponentPropType,\n    calendarComponent:RenderComponentPropType,\n    rangeFormatter:React.PropTypes.func,\n    fieldOptions:React.PropTypes.shape({\n      type:React.PropTypes.oneOf([\"embedded\", \"nested\", \"children\"]).isRequired,\n      options:React.PropTypes.object\n    }),\n  }, SearchkitComponent.propTypes)\n\n  static defaultProps = {\n    containerComponent: Panel,\n    rangeFormatter: (v) => moment(parseInt(\"\"+v)).format('D.M.YYYY')\n  }\n\n  constructor(props){\n    super(props)\n  }\n\n  defineAccessor() {\n    const {\n      id,\n      title,\n      fromDate,\n      toDate,\n      fromDateField,\n      toDateField,\n      fieldOptions,\n      rangeFormatter,\n    } = this.props\n\n    return new DateRangeAccessor(id, {\n      id,\n      fromDate,\n      toDate,\n      fromDateField,\n      toDateField,\n      title,\n      fieldOptions,\n      rangeFormatter,\n      onClearState: this.handleClearState\n    })\n  }\n\n  handleClearState = () => {\n    this.accessor.resetState()\n  }\n\n  defineBEMBlocks() {\n    let block = this.props.mod || \"sk-date-range-filter\"\n    return {\n      container: block,\n      labels: block+\"-value-labels\"\n    }\n  }\n\n  setCalendarState = (newValues) => {\n    if (!newValues.fromDate) {\n      this.accessor.resetState()\n    }\n    else {\n      this.accessor.state = this.accessor.state.setValue(newValues)\n    }\n  }\n\n  calendarUpdate = (newValues) => {\n    this.setCalendarState(newValues)\n  }\n\n  calendarUpdateAndSearch = (newValues) => {\n    this.calendarUpdate(newValues)\n    this.searchkit.performSearch()\n  }\n\n  getCalendarComponent() {\n    const { calendarComponent } = this.props\n    return (calendarComponent || DateRangeFilterInput)\n  }\n\n  render() {\n    const { id, title, containerComponent } = this.props\n\n    return renderComponent(containerComponent, {\n      title,\n      className: id ? `filter--${id}` : undefined,\n      disabled: this.accessor.isDisabled()\n    }, this.renderCalendarComponent(this.getCalendarComponent()))\n  }\n\n  renderCalendarComponent(component: RenderComponentType<any>) {\n    const { fromDate, toDate, rangeFormatter } = this.props\n    const state:{ fromDate?:string, toDate?:string } = this.accessor.state.getValue()\n\n    return renderComponent(component, {\n      fromDate: state.fromDate || fromDate,\n      toDate: state.toDate || toDate,\n      fromDateValue: get(state, \"fromDate\", fromDate),\n      toDateValue: get(state, \"toDate\", toDate),\n      items: this.accessor.getBuckets(),\n      onChange: this.calendarUpdate,\n      onFinished: this.calendarUpdateAndSearch,\n      rangeFormatter\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}