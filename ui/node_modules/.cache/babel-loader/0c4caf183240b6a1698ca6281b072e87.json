{"ast":null,"code":"var _ = require('lodash');\n\nvar utils = require('./utils');\n/**\n * Constructs a client action factory that uses specific defaults\n * @type {Function}\n */\n\n\nexports.makeFactoryWithModifier = makeFactoryWithModifier;\n/**\n * Constructs a function that can be called to make a request to ES\n * @type {Function}\n */\n\nexports.factory = makeFactoryWithModifier();\n/**\n * Constructs a proxy to another api method\n * @type {Function}\n */\n\nexports.proxyFactory = exports.factory.proxy; // export so that we can test this\n\nexports._resolveUrl = resolveUrl;\n\nexports.ApiNamespace = function () {};\n\nexports.namespaceFactory = function () {\n  function ClientNamespace(transport, client) {\n    this.transport = transport;\n    this.client = client;\n  }\n\n  ClientNamespace.prototype = new exports.ApiNamespace();\n  return ClientNamespace;\n};\n\nfunction makeFactoryWithModifier(modifier) {\n  modifier = modifier || _.identity;\n\n  var factory = function (spec) {\n    spec = modifier(spec);\n\n    if (!_.isPlainObject(spec.params)) {\n      spec.params = {};\n    }\n\n    if (!spec.method) {\n      spec.method = 'GET';\n    }\n\n    function action(params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      try {\n        return exec(this.transport, spec, _.clone(params), cb);\n      } catch (e) {\n        if (typeof cb === 'function') {\n          utils.nextTick(cb, e);\n        } else {\n          var def = this.transport.defer();\n          def.reject(e);\n          return def.promise;\n        }\n      }\n    }\n\n    action.spec = spec;\n    return action;\n  };\n\n  factory.proxy = function (fn, spec) {\n    return function (params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      if (spec.transform) {\n        spec.transform(params);\n      }\n\n      return fn.call(this, params, cb);\n    };\n  };\n\n  return factory;\n}\n\nvar castType = {\n  enum: function validSelection(param, val, name) {\n    if (_.isString(val) && val.indexOf(',') > -1) {\n      val = commaSepList(val);\n    }\n\n    if (_.isArray(val)) {\n      return val.map(function (v) {\n        return validSelection(param, v, name);\n      }).join(',');\n    }\n\n    for (var i = 0; i < param.options.length; i++) {\n      if (param.options[i] === String(val)) {\n        return param.options[i];\n      }\n    }\n\n    throw new TypeError('Invalid ' + name + ': expected ' + (param.options.length > 1 ? 'one of ' + param.options.join(',') : param.options[0]));\n  },\n  duration: function (param, val, name) {\n    if (utils.isNumeric(val) || utils.isInterval(val)) {\n      return val;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number or interval ' + '(an integer followed by one of M, w, d, h, m, s, y or ms).');\n    }\n  },\n  list: function (param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'boolean':\n        return '' + val;\n\n      case 'string':\n        val = commaSepList(val);\n\n      /* falls through */\n\n      case 'object':\n        if (_.isArray(val)) {\n          return val.join(',');\n        }\n\n      /* falls through */\n\n      default:\n        throw new TypeError('Invalid ' + name + ': expected be a comma separated list, array, number or string.');\n    }\n  },\n  boolean: function (param, val) {\n    val = _.isString(val) ? val.toLowerCase() : val;\n    return val === 'no' || val === 'off' ? false : !!val;\n  },\n  number: function (param, val, name) {\n    if (utils.isNumeric(val)) {\n      return val * 1;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number.');\n    }\n  },\n  string: function (param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'string':\n        return '' + val;\n\n      default:\n        throw new TypeError('Invalid ' + name + ': expected a string.');\n    }\n  },\n  time: function (param, val, name) {\n    if (typeof val === 'string') {\n      return val;\n    } else if (utils.isNumeric(val)) {\n      return '' + val;\n    } else if (val instanceof Date) {\n      return '' + val.getTime();\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected some sort of time.');\n    }\n  }\n};\n\nfunction resolveUrl(url, params) {\n  var vars = {};\n  var i;\n  var key;\n\n  if (url.req) {\n    // url has required params\n    if (!url.reqParamKeys) {\n      // create cached key list on demand\n      url.reqParamKeys = _.keys(url.req);\n    }\n\n    for (i = 0; i < url.reqParamKeys.length; i++) {\n      key = url.reqParamKeys[i];\n\n      if (!params.hasOwnProperty(key) || params[key] == null) {\n        // missing a required param\n        return false;\n      } else {\n        // cast of copy required param\n        if (castType[url.req[key].type]) {\n          vars[key] = castType[url.req[key].type](url.req[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      }\n    }\n  }\n\n  if (url.opt) {\n    // url has optional params\n    if (!url.optParamKeys) {\n      url.optParamKeys = _.keys(url.opt);\n    }\n\n    for (i = 0; i < url.optParamKeys.length; i++) {\n      key = url.optParamKeys[i];\n\n      if (params[key]) {\n        if (castType[url.opt[key].type] || params[key] == null) {\n          vars[key] = castType[url.opt[key].type](url.opt[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      } else {\n        vars[key] = url.opt[key]['default'];\n      }\n    }\n  }\n\n  if (!url.template) {\n    // compile the template on demand\n    url.template = _.template(url.fmt);\n  }\n\n  return url.template(_.transform(vars, function (note, val, name) {\n    // encode each value\n    note[name] = encodeURIComponent(val); // remove it from the params so that it isn't sent to the final request\n\n    delete params[name];\n  }, {}));\n}\n\nfunction exec(transport, spec, params, cb) {\n  var request = {\n    method: spec.method\n  };\n  var query = {};\n  var i; // pass the timeout from the spec\n\n  if (spec.requestTimeout) {\n    request.requestTimeout = spec.requestTimeout;\n  }\n\n  if (!params.body && spec.paramAsBody) {\n    if (typeof spec.paramAsBody === 'object') {\n      params.body = {};\n\n      if (spec.paramAsBody.castToArray) {\n        params.body[spec.paramAsBody.body] = [].concat(params[spec.paramAsBody.param]);\n      } else {\n        params.body[spec.paramAsBody.body] = params[spec.paramAsBody.param];\n      }\n\n      delete params[spec.paramAsBody.param];\n    } else {\n      params.body = params[spec.paramAsBody];\n      delete params[spec.paramAsBody];\n    }\n  } // verify that we have the body if needed\n\n\n  if (spec.needsBody && !params.body) {\n    throw new TypeError('A request body is required.');\n  } // control params\n\n\n  if (spec.bulkBody) {\n    request.bulkBody = true;\n  }\n\n  if (spec.method === 'HEAD') {\n    request.castExists = true;\n  } // pick the url\n\n\n  if (spec.url) {\n    // only one url option\n    request.path = resolveUrl(spec.url, params);\n  } else {\n    for (i = 0; i < spec.urls.length; i++) {\n      request.path = resolveUrl(spec.urls[i], params);\n\n      if (request.path) {\n        break;\n      }\n    }\n  }\n\n  if (!request.path) {\n    // there must have been some mimimun requirements that were not met\n    var minUrl = spec.url || spec.urls[spec.urls.length - 1];\n    throw new TypeError('Unable to build a path with those params. Supply at least ' + _.keys(minUrl.req).join(', '));\n  } // build the query string\n\n\n  if (!spec.paramKeys) {\n    // build a key list on demand\n    spec.paramKeys = _.keys(spec.params);\n    spec.requireParamKeys = _.transform(spec.params, function (req, param, key) {\n      if (param.required) {\n        req.push(key);\n      }\n    }, []);\n  }\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && params[key] != null) {\n      switch (key) {\n        case 'body':\n        case 'headers':\n        case 'requestTimeout':\n        case 'maxRetries':\n          request[key] = params[key];\n          break;\n\n        case 'ignore':\n          request.ignore = _.isArray(params[key]) ? params[key] : [params[key]];\n          break;\n\n        case 'method':\n          request.method = utils.toUpperString(params[key]);\n          break;\n\n        default:\n          var paramSpec = spec.params[key];\n\n          if (paramSpec) {\n            // param keys don't always match the param name, in those cases it's stored in the param def as \"name\"\n            paramSpec.name = paramSpec.name || key;\n\n            if (params[key] != null) {\n              if (castType[paramSpec.type]) {\n                query[paramSpec.name] = castType[paramSpec.type](paramSpec, params[key], key);\n              } else {\n                query[paramSpec.name] = params[key];\n              }\n\n              if (paramSpec['default'] && query[paramSpec.name] === paramSpec['default']) {\n                delete query[paramSpec.name];\n              }\n            }\n          } else {\n            query[key] = params[key];\n          }\n\n      }\n    }\n  }\n\n  for (i = 0; i < spec.requireParamKeys.length; i++) {\n    if (!query.hasOwnProperty(spec.requireParamKeys[i])) {\n      throw new TypeError('Missing required parameter ' + spec.requireParamKeys[i]);\n    }\n  }\n\n  request.query = query;\n  return transport.request(request, cb);\n}\n\nfunction commaSepList(str) {\n  return str.split(',').map(function (i) {\n    return i.trim();\n  });\n}","map":{"version":3,"sources":["/Users/mohitkumar/github/qhsearch/new_qhsearch/ui/node_modules/elasticsearch/src/lib/client_action.js"],"names":["_","require","utils","exports","makeFactoryWithModifier","factory","proxyFactory","proxy","_resolveUrl","resolveUrl","ApiNamespace","namespaceFactory","ClientNamespace","transport","client","prototype","modifier","identity","spec","isPlainObject","params","method","action","cb","exec","clone","e","nextTick","def","defer","reject","promise","fn","transform","call","castType","enum","validSelection","param","val","name","isString","indexOf","commaSepList","isArray","map","v","join","i","options","length","String","TypeError","duration","isNumeric","isInterval","list","boolean","toLowerCase","number","string","time","Date","getTime","url","vars","key","req","reqParamKeys","keys","hasOwnProperty","type","opt","optParamKeys","template","fmt","note","encodeURIComponent","request","query","requestTimeout","body","paramAsBody","castToArray","concat","needsBody","bulkBody","castExists","path","urls","minUrl","paramKeys","requireParamKeys","required","push","ignore","toUpperString","paramSpec","str","split","trim"],"mappings":"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","sourcesContent":["var _ = require('lodash');\nvar utils = require('./utils');\n\n/**\n * Constructs a client action factory that uses specific defaults\n * @type {Function}\n */\nexports.makeFactoryWithModifier = makeFactoryWithModifier;\n\n/**\n * Constructs a function that can be called to make a request to ES\n * @type {Function}\n */\nexports.factory = makeFactoryWithModifier();\n\n/**\n * Constructs a proxy to another api method\n * @type {Function}\n */\nexports.proxyFactory = exports.factory.proxy;\n\n// export so that we can test this\nexports._resolveUrl = resolveUrl;\n\nexports.ApiNamespace = function() {};\nexports.namespaceFactory = function() {\n  function ClientNamespace(transport, client) {\n    this.transport = transport;\n    this.client = client;\n  }\n\n  ClientNamespace.prototype = new exports.ApiNamespace();\n\n  return ClientNamespace;\n};\n\nfunction makeFactoryWithModifier(modifier) {\n  modifier = modifier || _.identity;\n\n  var factory = function(spec) {\n    spec = modifier(spec);\n\n    if (!_.isPlainObject(spec.params)) {\n      spec.params = {};\n    }\n\n    if (!spec.method) {\n      spec.method = 'GET';\n    }\n\n    function action(params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      try {\n        return exec(this.transport, spec, _.clone(params), cb);\n      } catch (e) {\n        if (typeof cb === 'function') {\n          utils.nextTick(cb, e);\n        } else {\n          var def = this.transport.defer();\n          def.reject(e);\n          return def.promise;\n        }\n      }\n    }\n\n    action.spec = spec;\n\n    return action;\n  };\n\n  factory.proxy = function(fn, spec) {\n    return function(params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      if (spec.transform) {\n        spec.transform(params);\n      }\n\n      return fn.call(this, params, cb);\n    };\n  };\n\n  return factory;\n}\n\nvar castType = {\n  enum: function validSelection(param, val, name) {\n    if (_.isString(val) && val.indexOf(',') > -1) {\n      val = commaSepList(val);\n    }\n\n    if (_.isArray(val)) {\n      return val\n        .map(function(v) {\n          return validSelection(param, v, name);\n        })\n        .join(',');\n    }\n\n    for (var i = 0; i < param.options.length; i++) {\n      if (param.options[i] === String(val)) {\n        return param.options[i];\n      }\n    }\n    throw new TypeError(\n      'Invalid ' +\n        name +\n        ': expected ' +\n        (param.options.length > 1\n          ? 'one of ' + param.options.join(',')\n          : param.options[0])\n    );\n  },\n  duration: function(param, val, name) {\n    if (utils.isNumeric(val) || utils.isInterval(val)) {\n      return val;\n    } else {\n      throw new TypeError(\n        'Invalid ' +\n          name +\n          ': expected a number or interval ' +\n          '(an integer followed by one of M, w, d, h, m, s, y or ms).'\n      );\n    }\n  },\n  list: function(param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'boolean':\n        return '' + val;\n      case 'string':\n        val = commaSepList(val);\n      /* falls through */\n      case 'object':\n        if (_.isArray(val)) {\n          return val.join(',');\n        }\n      /* falls through */\n      default:\n        throw new TypeError(\n          'Invalid ' +\n            name +\n            ': expected be a comma separated list, array, number or string.'\n        );\n    }\n  },\n  boolean: function(param, val) {\n    val = _.isString(val) ? val.toLowerCase() : val;\n    return val === 'no' || val === 'off' ? false : !!val;\n  },\n  number: function(param, val, name) {\n    if (utils.isNumeric(val)) {\n      return val * 1;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number.');\n    }\n  },\n  string: function(param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'string':\n        return '' + val;\n      default:\n        throw new TypeError('Invalid ' + name + ': expected a string.');\n    }\n  },\n  time: function(param, val, name) {\n    if (typeof val === 'string') {\n      return val;\n    } else if (utils.isNumeric(val)) {\n      return '' + val;\n    } else if (val instanceof Date) {\n      return '' + val.getTime();\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected some sort of time.');\n    }\n  },\n};\n\nfunction resolveUrl(url, params) {\n  var vars = {};\n  var i;\n  var key;\n\n  if (url.req) {\n    // url has required params\n    if (!url.reqParamKeys) {\n      // create cached key list on demand\n      url.reqParamKeys = _.keys(url.req);\n    }\n\n    for (i = 0; i < url.reqParamKeys.length; i++) {\n      key = url.reqParamKeys[i];\n      if (!params.hasOwnProperty(key) || params[key] == null) {\n        // missing a required param\n        return false;\n      } else {\n        // cast of copy required param\n        if (castType[url.req[key].type]) {\n          vars[key] = castType[url.req[key].type](\n            url.req[key],\n            params[key],\n            key\n          );\n        } else {\n          vars[key] = params[key];\n        }\n      }\n    }\n  }\n\n  if (url.opt) {\n    // url has optional params\n    if (!url.optParamKeys) {\n      url.optParamKeys = _.keys(url.opt);\n    }\n\n    for (i = 0; i < url.optParamKeys.length; i++) {\n      key = url.optParamKeys[i];\n      if (params[key]) {\n        if (castType[url.opt[key].type] || params[key] == null) {\n          vars[key] = castType[url.opt[key].type](\n            url.opt[key],\n            params[key],\n            key\n          );\n        } else {\n          vars[key] = params[key];\n        }\n      } else {\n        vars[key] = url.opt[key]['default'];\n      }\n    }\n  }\n\n  if (!url.template) {\n    // compile the template on demand\n    url.template = _.template(url.fmt);\n  }\n\n  return url.template(\n    _.transform(\n      vars,\n      function(note, val, name) {\n        // encode each value\n        note[name] = encodeURIComponent(val);\n        // remove it from the params so that it isn't sent to the final request\n        delete params[name];\n      },\n      {}\n    )\n  );\n}\n\nfunction exec(transport, spec, params, cb) {\n  var request = {\n    method: spec.method,\n  };\n  var query = {};\n  var i;\n\n  // pass the timeout from the spec\n  if (spec.requestTimeout) {\n    request.requestTimeout = spec.requestTimeout;\n  }\n\n  if (!params.body && spec.paramAsBody) {\n    if (typeof spec.paramAsBody === 'object') {\n      params.body = {};\n      if (spec.paramAsBody.castToArray) {\n        params.body[spec.paramAsBody.body] = [].concat(\n          params[spec.paramAsBody.param]\n        );\n      } else {\n        params.body[spec.paramAsBody.body] = params[spec.paramAsBody.param];\n      }\n      delete params[spec.paramAsBody.param];\n    } else {\n      params.body = params[spec.paramAsBody];\n      delete params[spec.paramAsBody];\n    }\n  }\n\n  // verify that we have the body if needed\n  if (spec.needsBody && !params.body) {\n    throw new TypeError('A request body is required.');\n  }\n\n  // control params\n  if (spec.bulkBody) {\n    request.bulkBody = true;\n  }\n\n  if (spec.method === 'HEAD') {\n    request.castExists = true;\n  }\n\n  // pick the url\n  if (spec.url) {\n    // only one url option\n    request.path = resolveUrl(spec.url, params);\n  } else {\n    for (i = 0; i < spec.urls.length; i++) {\n      request.path = resolveUrl(spec.urls[i], params);\n      if (request.path) {\n        break;\n      }\n    }\n  }\n\n  if (!request.path) {\n    // there must have been some mimimun requirements that were not met\n    var minUrl = spec.url || spec.urls[spec.urls.length - 1];\n    throw new TypeError(\n      'Unable to build a path with those params. Supply at least ' +\n        _.keys(minUrl.req).join(', ')\n    );\n  }\n\n  // build the query string\n  if (!spec.paramKeys) {\n    // build a key list on demand\n    spec.paramKeys = _.keys(spec.params);\n    spec.requireParamKeys = _.transform(\n      spec.params,\n      function(req, param, key) {\n        if (param.required) {\n          req.push(key);\n        }\n      },\n      []\n    );\n  }\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && params[key] != null) {\n      switch (key) {\n        case 'body':\n        case 'headers':\n        case 'requestTimeout':\n        case 'maxRetries':\n          request[key] = params[key];\n          break;\n        case 'ignore':\n          request.ignore = _.isArray(params[key]) ? params[key] : [params[key]];\n          break;\n        case 'method':\n          request.method = utils.toUpperString(params[key]);\n          break;\n        default:\n          var paramSpec = spec.params[key];\n          if (paramSpec) {\n            // param keys don't always match the param name, in those cases it's stored in the param def as \"name\"\n            paramSpec.name = paramSpec.name || key;\n            if (params[key] != null) {\n              if (castType[paramSpec.type]) {\n                query[paramSpec.name] = castType[paramSpec.type](\n                  paramSpec,\n                  params[key],\n                  key\n                );\n              } else {\n                query[paramSpec.name] = params[key];\n              }\n\n              if (\n                paramSpec['default'] &&\n                query[paramSpec.name] === paramSpec['default']\n              ) {\n                delete query[paramSpec.name];\n              }\n            }\n          } else {\n            query[key] = params[key];\n          }\n      }\n    }\n  }\n\n  for (i = 0; i < spec.requireParamKeys.length; i++) {\n    if (!query.hasOwnProperty(spec.requireParamKeys[i])) {\n      throw new TypeError(\n        'Missing required parameter ' + spec.requireParamKeys[i]\n      );\n    }\n  }\n\n  request.query = query;\n\n  return transport.request(request, cb);\n}\n\nfunction commaSepList(str) {\n  return str.split(',').map(function(i) {\n    return i.trim();\n  });\n}\n"]},"metadata":{},"sourceType":"script"}