{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar accessors_1 = require(\"./accessors\");\n\nvar support_1 = require(\"./support\");\n\nvar query_1 = require(\"./query\");\n\nvar filter = require('lodash/filter');\n\nvar values = require('lodash/values');\n\nvar reduce = require('lodash/reduce');\n\nvar assign = require('lodash/assign');\n\nvar each = require('lodash/each');\n\nvar without = require('lodash/without');\n\nvar find = require('lodash/find');\n\nvar AccessorManager =\n/** @class */\nfunction () {\n  function AccessorManager() {\n    this.accessors = [];\n    this.queryAccessor = accessors_1.noopQueryAccessor;\n    this.statefulAccessors = {};\n  }\n\n  AccessorManager.prototype.getAccessors = function () {\n    return this.accessors;\n  };\n\n  AccessorManager.prototype.getActiveAccessors = function () {\n    return filter(this.accessors, {\n      active: true\n    });\n  };\n\n  AccessorManager.prototype.getStatefulAccessors = function () {\n    return values(this.statefulAccessors);\n  };\n\n  AccessorManager.prototype.getAccessorsByType = function (type) {\n    return filter(this.accessors, support_1.Utils.instanceOf(type));\n  };\n\n  AccessorManager.prototype.getAccessorByType = function (type) {\n    return find(this.accessors, support_1.Utils.instanceOf(type));\n  };\n\n  AccessorManager.prototype.add = function (accessor) {\n    if (accessor instanceof accessors_1.StatefulAccessor) {\n      if (accessor instanceof accessors_1.BaseQueryAccessor && accessor.key == 'q') {\n        if (this.queryAccessor !== accessors_1.noopQueryAccessor) {\n          throw new Error('Only a single instance of BaseQueryAccessor is allowed');\n        } else {\n          this.queryAccessor = accessor;\n        }\n      }\n\n      var existingAccessor = this.statefulAccessors[accessor.key];\n\n      if (existingAccessor) {\n        if (existingAccessor.constructor === accessor.constructor) {\n          existingAccessor.incrementRef();\n          return existingAccessor;\n        }\n\n        throw new Error(\"Multiple imcompatible components with id='\" + accessor.key + \"' existing on the page\");\n      } else {\n        this.statefulAccessors[accessor.key] = accessor;\n      }\n    }\n\n    accessor.incrementRef();\n    this.accessors.push(accessor);\n    return accessor;\n  };\n\n  AccessorManager.prototype.remove = function (accessor) {\n    if (!accessor) {\n      return;\n    }\n\n    accessor.decrementRef();\n\n    if (accessor.refCount === 0) {\n      if (accessor instanceof accessors_1.StatefulAccessor) {\n        if (this.queryAccessor == accessor) {\n          this.queryAccessor = accessors_1.noopQueryAccessor;\n        }\n\n        delete this.statefulAccessors[accessor.key];\n      }\n\n      this.accessors = without(this.accessors, accessor);\n    }\n  };\n\n  AccessorManager.prototype.getState = function () {\n    return reduce(this.getStatefulAccessors(), function (state, accessor) {\n      return assign(state, accessor.getQueryObject());\n    }, {});\n  };\n\n  AccessorManager.prototype.setState = function (state) {\n    each(this.getStatefulAccessors(), function (accessor) {\n      return accessor.fromQueryObject(state);\n    });\n  };\n\n  AccessorManager.prototype.notifyStateChange = function (oldState) {\n    each(this.getStatefulAccessors(), function (accessor) {\n      return accessor.onStateChange(oldState);\n    });\n  };\n\n  AccessorManager.prototype.getQueryAccessor = function () {\n    return this.queryAccessor;\n  };\n\n  AccessorManager.prototype.buildSharedQuery = function (query) {\n    return reduce(this.getActiveAccessors(), function (query, accessor) {\n      return accessor.buildSharedQuery(query);\n    }, query);\n  };\n\n  AccessorManager.prototype.buildOwnQuery = function (query) {\n    return reduce(this.getActiveAccessors(), function (query, accessor) {\n      return accessor.buildOwnQuery(query);\n    }, query);\n  };\n\n  AccessorManager.prototype.buildQuery = function () {\n    each(this.getActiveAccessors(), function (accessor) {\n      return accessor.beforeBuildQuery();\n    });\n    return this.buildOwnQuery(this.buildSharedQuery(new query_1.ImmutableQuery()));\n  };\n\n  AccessorManager.prototype.setResults = function (results) {\n    each(this.accessors, function (a) {\n      return a.setResults(results);\n    });\n  };\n\n  AccessorManager.prototype.resetState = function () {\n    each(this.getStatefulAccessors(), function (a) {\n      return a.resetState();\n    });\n  };\n\n  return AccessorManager;\n}();\n\nexports.AccessorManager = AccessorManager;","map":{"version":3,"sources":["../../src/core/AccessorManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar accessors_1 = require(\"./accessors\");\nvar support_1 = require(\"./support\");\nvar query_1 = require(\"./query\");\nvar filter = require('lodash/filter');\nvar values = require('lodash/values');\nvar reduce = require('lodash/reduce');\nvar assign = require('lodash/assign');\nvar each = require('lodash/each');\nvar without = require('lodash/without');\nvar find = require('lodash/find');\nvar AccessorManager = /** @class */ (function () {\n    function AccessorManager() {\n        this.accessors = [];\n        this.queryAccessor = accessors_1.noopQueryAccessor;\n        this.statefulAccessors = {};\n    }\n    AccessorManager.prototype.getAccessors = function () {\n        return this.accessors;\n    };\n    AccessorManager.prototype.getActiveAccessors = function () {\n        return filter(this.accessors, { active: true });\n    };\n    AccessorManager.prototype.getStatefulAccessors = function () {\n        return values(this.statefulAccessors);\n    };\n    AccessorManager.prototype.getAccessorsByType = function (type) {\n        return filter(this.accessors, support_1.Utils.instanceOf(type));\n    };\n    AccessorManager.prototype.getAccessorByType = function (type) {\n        return find(this.accessors, support_1.Utils.instanceOf(type));\n    };\n    AccessorManager.prototype.add = function (accessor) {\n        if (accessor instanceof accessors_1.StatefulAccessor) {\n            if (accessor instanceof accessors_1.BaseQueryAccessor && accessor.key == 'q') {\n                if (this.queryAccessor !== accessors_1.noopQueryAccessor) {\n                    throw new Error('Only a single instance of BaseQueryAccessor is allowed');\n                }\n                else {\n                    this.queryAccessor = accessor;\n                }\n            }\n            var existingAccessor = this.statefulAccessors[accessor.key];\n            if (existingAccessor) {\n                if (existingAccessor.constructor === accessor.constructor) {\n                    existingAccessor.incrementRef();\n                    return existingAccessor;\n                }\n                throw new Error(\"Multiple imcompatible components with id='\" + accessor.key + \"' existing on the page\");\n            }\n            else {\n                this.statefulAccessors[accessor.key] = accessor;\n            }\n        }\n        accessor.incrementRef();\n        this.accessors.push(accessor);\n        return accessor;\n    };\n    AccessorManager.prototype.remove = function (accessor) {\n        if (!accessor) {\n            return;\n        }\n        accessor.decrementRef();\n        if (accessor.refCount === 0) {\n            if (accessor instanceof accessors_1.StatefulAccessor) {\n                if (this.queryAccessor == accessor) {\n                    this.queryAccessor = accessors_1.noopQueryAccessor;\n                }\n                delete this.statefulAccessors[accessor.key];\n            }\n            this.accessors = without(this.accessors, accessor);\n        }\n    };\n    AccessorManager.prototype.getState = function () {\n        return reduce(this.getStatefulAccessors(), function (state, accessor) { return assign(state, accessor.getQueryObject()); }, {});\n    };\n    AccessorManager.prototype.setState = function (state) {\n        each(this.getStatefulAccessors(), function (accessor) { return accessor.fromQueryObject(state); });\n    };\n    AccessorManager.prototype.notifyStateChange = function (oldState) {\n        each(this.getStatefulAccessors(), function (accessor) { return accessor.onStateChange(oldState); });\n    };\n    AccessorManager.prototype.getQueryAccessor = function () {\n        return this.queryAccessor;\n    };\n    AccessorManager.prototype.buildSharedQuery = function (query) {\n        return reduce(this.getActiveAccessors(), function (query, accessor) { return accessor.buildSharedQuery(query); }, query);\n    };\n    AccessorManager.prototype.buildOwnQuery = function (query) {\n        return reduce(this.getActiveAccessors(), function (query, accessor) { return accessor.buildOwnQuery(query); }, query);\n    };\n    AccessorManager.prototype.buildQuery = function () {\n        each(this.getActiveAccessors(), function (accessor) { return accessor.beforeBuildQuery(); });\n        return this.buildOwnQuery(this.buildSharedQuery(new query_1.ImmutableQuery()));\n    };\n    AccessorManager.prototype.setResults = function (results) {\n        each(this.accessors, function (a) { return a.setResults(results); });\n    };\n    AccessorManager.prototype.resetState = function () {\n        each(this.getStatefulAccessors(), function (a) { return a.resetState(); });\n    };\n    return AccessorManager;\n}());\nexports.AccessorManager = AccessorManager;\n//# sourceMappingURL=AccessorManager.js.map"]},"metadata":{},"sourceType":"script"}