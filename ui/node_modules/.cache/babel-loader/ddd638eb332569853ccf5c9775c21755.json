{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport React, { useContext } from 'react';\nimport BaseDropdownMenu from 'react-overlays/DropdownMenu';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar wrapRef = function wrapRef(props) {\n  var ref = props.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(findDOMNode(r));\n  });\n\n  return props;\n};\n\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  return React.createElement(BaseDropdownMenu, {\n    ref: ref // FIXME: the ref situation is out of hand here\n    ,\n    flip: flip,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent\n  }, function (_ref2) {\n    var placement = _ref2.placement,\n        show = _ref2.show,\n        alignEnd = _ref2.alignEnd,\n        close = _ref2.close,\n        menuProps = _ref2.props;\n    wrapRef(menuProps); // For custom components provide additional, non-DOM, props;\n\n    if (typeof Component !== 'string') {\n      menuProps.show = show;\n      menuProps.close = close;\n      menuProps.alignRight = alignEnd;\n    }\n\n    var style = props.style;\n\n    if (placement) {\n      // we don't need the default popper style,\n      // menus are display: none when not shown.\n      style = _extends({}, style, {}, menuProps.style);\n      props['x-placement'] = placement;\n    }\n\n    return React.createElement(Component, _extends({}, props, menuProps, {\n      style: style,\n      className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n    }));\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","map":{"version":3,"sources":["/Users/mohitkumar/github/qhsearch/new_qhsearch/node_modules/react-bootstrap/esm/DropdownMenu.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","findDOMNode","React","useContext","BaseDropdownMenu","NavbarContext","useBootstrapPrefix","wrapRef","props","ref","__wrapped","r","defaultProps","alignRight","flip","DropdownMenu","forwardRef","_ref","bsPrefix","className","rootCloseEvent","popperConfig","showProps","show","_ref$as","as","Component","isNavbar","prefix","createElement","alignEnd","usePopper","_ref2","placement","close","menuProps","style","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport React, { useContext } from 'react';\nimport BaseDropdownMenu from 'react-overlays/DropdownMenu';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar wrapRef = function wrapRef(props) {\n  var ref = props.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(findDOMNode(r));\n  });\n\n  return props;\n};\n\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  return React.createElement(BaseDropdownMenu, {\n    ref: ref // FIXME: the ref situation is out of hand here\n    ,\n    flip: flip,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent\n  }, function (_ref2) {\n    var placement = _ref2.placement,\n        show = _ref2.show,\n        alignEnd = _ref2.alignEnd,\n        close = _ref2.close,\n        menuProps = _ref2.props;\n    wrapRef(menuProps); // For custom components provide additional, non-DOM, props;\n\n    if (typeof Component !== 'string') {\n      menuProps.show = show;\n      menuProps.close = close;\n      menuProps.alignRight = alignEnd;\n    }\n\n    var style = props.style;\n\n    if (placement) {\n      // we don't need the default popper style,\n      // menus are display: none when not shown.\n      style = _extends({}, style, {}, menuProps.style);\n      props['x-placement'] = placement;\n    }\n\n    return React.createElement(Component, _extends({}, props, menuProps, {\n      style: style,\n      className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n    }));\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}