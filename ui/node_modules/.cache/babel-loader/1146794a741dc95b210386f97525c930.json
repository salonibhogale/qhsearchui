{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar defaults = require('lodash/defaults');\n\nvar PaginationHelper =\n/** @class */\nfunction () {\n  function PaginationHelper(_a) {\n    var currentPage = _a.currentPage,\n        totalPages = _a.totalPages,\n        translate = _a.translate;\n    this.currentPage = currentPage;\n    this.totalPages = totalPages;\n    this.translate = translate;\n    this.pages = [];\n    this.lastPage = 0; // Last added page number\n  }\n\n  PaginationHelper.prototype.push = function (item) {\n    this.pages.push(item);\n  };\n\n  PaginationHelper.prototype.previous = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.push(defaults({\n      key: 'previous',\n      label: this.translate('pagination.previous'),\n      page: this.currentPage > 1 ? this.currentPage - 1 : undefined,\n      disabled: this.currentPage === 1\n    }, options));\n  };\n\n  PaginationHelper.prototype.next = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.push(defaults({\n      key: 'next',\n      label: this.translate('pagination.next'),\n      page: this.currentPage < this.totalPages - 1 ? this.currentPage + 1 : undefined,\n      disabled: this.currentPage === this.totalPages\n    }, options));\n  };\n\n  PaginationHelper.prototype.page = function (pageNumber, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (pageNumber > 0 && pageNumber <= this.totalPages) {\n      this.push(defaults({\n        key: pageNumber,\n        label: '' + pageNumber,\n        page: pageNumber,\n        active: pageNumber == this.currentPage\n      }, options));\n    }\n  };\n\n  PaginationHelper.prototype.range = function (minPage, maxPage, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var min = Math.max(1, minPage);\n    var max = Math.min(maxPage, this.totalPages);\n\n    for (var i = min; i <= max; i++) {\n      this.page(i, options);\n    }\n  };\n\n  PaginationHelper.prototype.ellipsis = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.push(defaults({\n      key: 'ellipsis-' + this.pages.length,\n      label: '...',\n      disabled: true\n    }, options));\n  };\n\n  return PaginationHelper;\n}();\n\nexports.PaginationHelper = PaginationHelper;\nexports.Paginator = {\n  build: function (_a) {\n    var _b = _a.showNumbers,\n        showNumbers = _b === void 0 ? true : _b,\n        _c = _a.showPrevious,\n        showPrevious = _c === void 0 ? true : _c,\n        _d = _a.showNext,\n        showNext = _d === void 0 ? true : _d,\n        _e = _a.showEllipsis,\n        showEllipsis = _e === void 0 ? true : _e,\n        _f = _a.showFirst,\n        showFirst = _f === void 0 ? true : _f,\n        _g = _a.showLast,\n        showLast = _g === void 0 ? false : _g;\n    return function (currentPage, totalPages, translate, pageScope) {\n      if (pageScope === void 0) {\n        pageScope = 3;\n      }\n\n      var builder = new PaginationHelper({\n        currentPage: currentPage,\n        totalPages: totalPages,\n        translate: translate\n      });\n      if (showPrevious) builder.previous();\n\n      if (showNumbers) {\n        if (showFirst && currentPage > pageScope + 1) builder.page(1);\n        if (showEllipsis && currentPage > pageScope + 2) builder.ellipsis();\n        builder.range(currentPage - pageScope, currentPage - 1);\n        builder.page(currentPage, {\n          active: true\n        });\n        builder.range(currentPage + 1, currentPage + pageScope);\n        var lastEllipsisLimit = showLast ? totalPages - pageScope - 1 : totalPages - pageScope;\n        if (showEllipsis && currentPage < lastEllipsisLimit) builder.ellipsis();\n        if (showLast && currentPage < totalPages - pageScope) builder.page(totalPages);\n      }\n\n      if (showNext) builder.next();\n      return builder.pages;\n    };\n  }\n};","map":{"version":3,"sources":["../../../../../src/components/search/pagination/src/PaginationUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar defaults = require('lodash/defaults');\nvar PaginationHelper = /** @class */ (function () {\n    function PaginationHelper(_a) {\n        var currentPage = _a.currentPage, totalPages = _a.totalPages, translate = _a.translate;\n        this.currentPage = currentPage;\n        this.totalPages = totalPages;\n        this.translate = translate;\n        this.pages = [];\n        this.lastPage = 0; // Last added page number\n    }\n    PaginationHelper.prototype.push = function (item) {\n        this.pages.push(item);\n    };\n    PaginationHelper.prototype.previous = function (options) {\n        if (options === void 0) { options = {}; }\n        this.push(defaults({\n            key: 'previous',\n            label: this.translate('pagination.previous'),\n            page: this.currentPage > 1 ? this.currentPage - 1 : undefined,\n            disabled: this.currentPage === 1\n        }, options));\n    };\n    PaginationHelper.prototype.next = function (options) {\n        if (options === void 0) { options = {}; }\n        this.push(defaults({\n            key: 'next',\n            label: this.translate('pagination.next'),\n            page: this.currentPage < this.totalPages - 1 ? this.currentPage + 1 : undefined,\n            disabled: this.currentPage === this.totalPages\n        }, options));\n    };\n    PaginationHelper.prototype.page = function (pageNumber, options) {\n        if (options === void 0) { options = {}; }\n        if (pageNumber > 0 && pageNumber <= this.totalPages) {\n            this.push(defaults({\n                key: pageNumber,\n                label: '' + pageNumber,\n                page: pageNumber,\n                active: pageNumber == this.currentPage\n            }, options));\n        }\n    };\n    PaginationHelper.prototype.range = function (minPage, maxPage, options) {\n        if (options === void 0) { options = {}; }\n        var min = Math.max(1, minPage);\n        var max = Math.min(maxPage, this.totalPages);\n        for (var i = min; i <= max; i++) {\n            this.page(i, options);\n        }\n    };\n    PaginationHelper.prototype.ellipsis = function (options) {\n        if (options === void 0) { options = {}; }\n        this.push(defaults({\n            key: 'ellipsis-' + this.pages.length,\n            label: '...',\n            disabled: true\n        }, options));\n    };\n    return PaginationHelper;\n}());\nexports.PaginationHelper = PaginationHelper;\nexports.Paginator = {\n    build: function (_a) {\n        var _b = _a.showNumbers, showNumbers = _b === void 0 ? true : _b, _c = _a.showPrevious, showPrevious = _c === void 0 ? true : _c, _d = _a.showNext, showNext = _d === void 0 ? true : _d, _e = _a.showEllipsis, showEllipsis = _e === void 0 ? true : _e, _f = _a.showFirst, showFirst = _f === void 0 ? true : _f, _g = _a.showLast, showLast = _g === void 0 ? false : _g;\n        return function (currentPage, totalPages, translate, pageScope) {\n            if (pageScope === void 0) { pageScope = 3; }\n            var builder = new PaginationHelper({\n                currentPage: currentPage,\n                totalPages: totalPages,\n                translate: translate\n            });\n            if (showPrevious)\n                builder.previous();\n            if (showNumbers) {\n                if (showFirst && currentPage > pageScope + 1)\n                    builder.page(1);\n                if (showEllipsis && currentPage > pageScope + 2)\n                    builder.ellipsis();\n                builder.range(currentPage - pageScope, currentPage - 1);\n                builder.page(currentPage, { active: true });\n                builder.range(currentPage + 1, currentPage + pageScope);\n                var lastEllipsisLimit = showLast ? totalPages - pageScope - 1 : totalPages - pageScope;\n                if (showEllipsis && currentPage < lastEllipsisLimit)\n                    builder.ellipsis();\n                if (showLast && currentPage < totalPages - pageScope)\n                    builder.page(totalPages);\n            }\n            if (showNext)\n                builder.next();\n            return builder.pages;\n        };\n    }\n};\n//# sourceMappingURL=PaginationUtils.js.map"]},"metadata":{},"sourceType":"script"}