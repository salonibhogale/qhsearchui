{"ast":null,"code":"var _jsxFileName = \"/Users/mohitkumar/github/qhsearch/new_qhsearch/ui/src/Components/Shared/Checkbox.js\";\n\n/*\nCheckbox component to display the checkbox input with label\nAccepts following props:\nid: id for the checkbox input\nlabel: label to display beside the checkbox\nchecked: boolean to indicate if checkbox is checked\nonChange: function to call when checkbox value changes\n*/\nimport React, { Component } from \"react\";\nimport \"../../Assets/Styles/layout.css\";\nexport default class Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    };\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  handleCheckboxChange(e) {\n    this.setState({\n      checked: e.target.checked\n    });\n    this.props.onChange(e.target.id.split(\"_\").slice(-1)[0], e.target.checked);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.checked === false && this.state.checked) {\n      this.setState({\n        checked: false\n      });\n    }\n  }\n\n  render() {\n    var label = this.props.label;\n    var id = this.props.id;\n    var isChecked = this.props.checked ? this.props.checked : this.state.checked;\n    var title = this.props.title;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: id,\n      key: id,\n      checked: isChecked,\n      onChange: this.handleCheckboxChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"control-label\",\n      key: id + \"_label\",\n      title: title,\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, label));\n  }\n\n}","map":{"version":3,"sources":["/Users/mohitkumar/github/qhsearch/new_qhsearch/ui/src/Components/Shared/Checkbox.js"],"names":["React","Component","Checkbox","constructor","props","state","checked","handleCheckboxChange","bind","e","setState","target","onChange","id","split","slice","componentWillUpdate","nextProps","nextState","render","label","isChecked","title"],"mappings":";;AAAA;;;;;;;;AASA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gCAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC9CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDD,EAAAA,oBAAoB,CAACE,CAAD,EAAI;AACtB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAEG,CAAC,CAACE,MAAF,CAASL;AAApB,KAAd;AACA,SAAKF,KAAL,CAAWQ,QAAX,CAAoBH,CAAC,CAACE,MAAF,CAASE,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,EAAuBC,KAAvB,CAA6B,CAAC,CAA9B,EAAiC,CAAjC,CAApB,EAAyDN,CAAC,CAACE,MAAF,CAASL,OAAlE;AACD;;AAEDU,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAID,SAAS,CAACX,OAAV,KAAsB,KAAtB,IAA+B,KAAKD,KAAL,CAAWC,OAA9C,EAAuD;AACrD,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKhB,KAAL,CAAWgB,KAAvB;AACA,QAAIP,EAAE,GAAG,KAAKT,KAAL,CAAWS,EAApB;AACA,QAAIQ,SAAS,GAAG,KAAKjB,KAAL,CAAWE,OAAX,GACZ,KAAKF,KAAL,CAAWE,OADC,GAEZ,KAAKD,KAAL,CAAWC,OAFf;AAGA,QAAIgB,KAAK,GAAG,KAAKlB,KAAL,CAAWkB,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAET,EAFN;AAGE,MAAA,GAAG,EAAEA,EAHP;AAIE,MAAA,OAAO,EAAEQ,SAJX;AAKE,MAAA,QAAQ,EAAE,KAAKd,oBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAEM,EAAE,GAAG,QAFZ;AAGE,MAAA,KAAK,EAAES,KAHT;AAIE,MAAA,OAAO,EAAET,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGO,KANH,CARF,CADF;AAmBD;;AA5C6C","sourcesContent":["/*\nCheckbox component to display the checkbox input with label\nAccepts following props:\nid: id for the checkbox input\nlabel: label to display beside the checkbox\nchecked: boolean to indicate if checkbox is checked\nonChange: function to call when checkbox value changes\n*/\n\nimport React, { Component } from \"react\";\nimport \"../../Assets/Styles/layout.css\";\n\nexport default class Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { checked: false };\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  handleCheckboxChange(e) {\n    this.setState({ checked: e.target.checked });\n    this.props.onChange(e.target.id.split(\"_\").slice(-1)[0], e.target.checked);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.checked === false && this.state.checked) {\n      this.setState({ checked: false });\n    }\n  }\n\n  render() {\n    var label = this.props.label;\n    var id = this.props.id;\n    var isChecked = this.props.checked\n      ? this.props.checked\n      : this.state.checked;\n    var title = this.props.title;\n    return (\n      <div className=\"form-group\">\n        <input\n          type=\"checkbox\"\n          id={id}\n          key={id}\n          checked={isChecked}\n          onChange={this.handleCheckboxChange}\n        />\n        <label\n          className=\"control-label\"\n          key={id + \"_label\"}\n          title={title}\n          htmlFor={id}\n        >\n          {label}\n        </label>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}