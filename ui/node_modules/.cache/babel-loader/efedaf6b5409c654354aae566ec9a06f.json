{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isArray = require('lodash/isArray');\n\nvar findIndex = require('lodash/findIndex');\n\nvar forEach = require('lodash/forEach');\n\nvar isEmpty = require('lodash/isEmpty');\n\nvar filter = require('lodash/filter');\n\nvar keys = require('lodash/keys');\n\nfunction isBoolOp(operator, val) {\n  // Has {bool: must: []} ?\n  if (!val.bool || !val.bool[operator]) return false; // Doesn't have other stuff ?\n\n  return keys(val).length == 1 && keys(val.bool).length == 1;\n}\n\nfunction flattenBool(operator, arr) {\n  // Flatten bool.must\n  var newArr = [];\n  forEach(arr, function (node) {\n    if (isBoolOp(operator, node)) {\n      newArr = newArr.concat(node.bool[operator]);\n    } else {\n      newArr.push(node);\n    }\n  });\n  return newArr;\n}\n\nfunction boolHelper(val, operator) {\n  var _a;\n\n  var isArr = isArray(val);\n\n  if (isArr) {\n    // Remove empty filters\n    val = filter(val, function (f) {\n      return !isEmpty(f);\n    });\n\n    if (val.length === 1) {\n      if (operator != 'must_not') return val[0];\n      val = val[0]; // Unbox array\n    } else if (val.length === 0) {\n      return {};\n    } else if ((operator == 'must' || operator == 'should') && findIndex(val, isBoolOp.bind(null, operator)) != -1) {\n      val = flattenBool(operator, val);\n    }\n  }\n\n  return {\n    bool: (_a = {}, _a[operator] = val, _a)\n  };\n}\n\nfunction BoolMust(val) {\n  return boolHelper(val, 'must');\n}\n\nexports.BoolMust = BoolMust;\n\nfunction BoolMustNot(val) {\n  return boolHelper(val, 'must_not');\n}\n\nexports.BoolMustNot = BoolMustNot;\n\nfunction BoolShould(val) {\n  return boolHelper(val, 'should');\n}\n\nexports.BoolShould = BoolShould;","map":{"version":3,"sources":["../../../../../src/core/query/query_dsl/compound/BoolQueries.ts"],"names":[],"mappings":";;;;AAAA,IAAM,OAAO,GAAG,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAM,SAAS,GAAG,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAM,OAAO,GAAG,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAM,OAAO,GAAG,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAM,MAAM,GAAG,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAM,IAAI,GAAG,OAAO,CAAC,aAAD,CAApB;;AAEA,SAAS,QAAT,CAAkB,QAAlB,EAA4B,GAA5B,EAA+B;AAC7B;AACA,MAAI,CAAC,GAAG,CAAC,IAAL,IAAa,CAAC,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAlB,EAAsC,OAAO,KAAP,CAFT,CAI7B;;AACA,SAAO,IAAI,CAAC,GAAD,CAAJ,CAAU,MAAV,IAAoB,CAApB,IAAyB,IAAI,CAAC,GAAG,CAAC,IAAL,CAAJ,CAAe,MAAf,IAAyB,CAAzD;AACD;;AAED,SAAS,WAAT,CAAqB,QAArB,EAA+B,GAA/B,EAA8C;AAC5C;AACA,MAAI,MAAM,GAAG,EAAb;AACA,EAAA,OAAO,CAAC,GAAD,EAAM,UAAC,IAAD,EAAK;AAChB,QAAI,QAAQ,CAAC,QAAD,EAAW,IAAX,CAAZ,EAA8B;AAC5B,MAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,IAAI,CAAC,IAAL,CAAU,QAAV,CAAd,CAAT;AACD,KAFD,MAEO;AACL,MAAA,MAAM,CAAC,IAAP,CAAY,IAAZ;AACD;AACF,GANM,CAAP;AAOA,SAAO,MAAP;AACD;;AAED,SAAS,UAAT,CAAoB,GAApB,EAAyB,QAAzB,EAAiC;;;AAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,GAAD,CAArB;;AACA,MAAI,KAAJ,EAAW;AACT;AACA,IAAA,GAAG,GAAG,MAAM,CAAC,GAAD,EAAM,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,OAAO,CAAR,CAAQ,CAAR;AAAW,KAAxB,CAAZ;;AACA,QAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AACpB,UAAI,QAAQ,IAAI,UAAhB,EAA4B,OAAO,GAAG,CAAC,CAAD,CAAV;AAC5B,MAAA,GAAG,GAAG,GAAG,CAAC,CAAD,CAAT,CAFoB,CAEP;AACd,KAHD,MAGO,IAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,aAAO,EAAP;AACD,KAFM,MAEA,IACL,CAAC,QAAQ,IAAI,MAAZ,IAAsB,QAAQ,IAAI,QAAnC,KACA,SAAS,CAAC,GAAD,EAAM,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,QAApB,CAAN,CAAT,IAAiD,CAAC,CAF7C,EAGL;AACA,MAAA,GAAG,GAAG,WAAW,CAAC,QAAD,EAAW,GAAX,CAAjB;AACD;AACF;;AACD,SAAO;AACL,IAAA,IAAI,GAAA,EAAA,GAAA,EAAA,EACF,EAAA,CAAC,QAAD,CAAA,GAAY,GADV,EAEH,EAFG;AADC,GAAP;AAKD;;AAED,SAAgB,QAAhB,CAAyB,GAAzB,EAAiC;AAC/B,SAAO,UAAU,CAAC,GAAD,EAAM,MAAN,CAAjB;AACD;;AAFD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAIA,SAAgB,WAAhB,CAA4B,GAA5B,EAAoC;AAClC,SAAO,UAAU,CAAC,GAAD,EAAM,UAAN,CAAjB;AACD;;AAFD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAIA,SAAgB,UAAhB,CAA2B,GAA3B,EAAmC;AACjC,SAAO,UAAU,CAAC,GAAD,EAAM,QAAN,CAAjB;AACD;;AAFD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray = require('lodash/isArray');\nvar findIndex = require('lodash/findIndex');\nvar forEach = require('lodash/forEach');\nvar isEmpty = require('lodash/isEmpty');\nvar filter = require('lodash/filter');\nvar keys = require('lodash/keys');\nfunction isBoolOp(operator, val) {\n    // Has {bool: must: []} ?\n    if (!val.bool || !val.bool[operator])\n        return false;\n    // Doesn't have other stuff ?\n    return keys(val).length == 1 && keys(val.bool).length == 1;\n}\nfunction flattenBool(operator, arr) {\n    // Flatten bool.must\n    var newArr = [];\n    forEach(arr, function (node) {\n        if (isBoolOp(operator, node)) {\n            newArr = newArr.concat(node.bool[operator]);\n        }\n        else {\n            newArr.push(node);\n        }\n    });\n    return newArr;\n}\nfunction boolHelper(val, operator) {\n    var _a;\n    var isArr = isArray(val);\n    if (isArr) {\n        // Remove empty filters\n        val = filter(val, function (f) { return !isEmpty(f); });\n        if (val.length === 1) {\n            if (operator != 'must_not')\n                return val[0];\n            val = val[0]; // Unbox array\n        }\n        else if (val.length === 0) {\n            return {};\n        }\n        else if ((operator == 'must' || operator == 'should') &&\n            findIndex(val, isBoolOp.bind(null, operator)) != -1) {\n            val = flattenBool(operator, val);\n        }\n    }\n    return {\n        bool: (_a = {},\n            _a[operator] = val,\n            _a)\n    };\n}\nfunction BoolMust(val) {\n    return boolHelper(val, 'must');\n}\nexports.BoolMust = BoolMust;\nfunction BoolMustNot(val) {\n    return boolHelper(val, 'must_not');\n}\nexports.BoolMustNot = BoolMustNot;\nfunction BoolShould(val) {\n    return boolHelper(val, 'should');\n}\nexports.BoolShould = BoolShould;\n//# sourceMappingURL=BoolQueries.js.map"]},"metadata":{},"sourceType":"script"}