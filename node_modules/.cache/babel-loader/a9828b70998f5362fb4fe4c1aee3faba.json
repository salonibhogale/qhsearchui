{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AggsContainer_1 = require(\"./AggsContainer\");\n\nvar assign = require('lodash/assign');\n\nfunction FieldMetricFactory(metricOp) {\n  return function (key, field) {\n    var _a;\n\n    return AggsContainer_1.AggsContainer(key, (_a = {}, _a[metricOp] = {\n      field: field\n    }, _a));\n  };\n}\n\nexports.FieldMetricFactory = FieldMetricFactory;\nexports.CardinalityMetric = FieldMetricFactory('cardinality');\nexports.MinMetric = FieldMetricFactory('min');\nexports.MaxMetric = FieldMetricFactory('max');\nexports.AvgMetric = FieldMetricFactory('avg');\nexports.SumMetric = FieldMetricFactory('sum');\nexports.StatsMetric = FieldMetricFactory('stats');\n\nfunction TopHitsMetric(key, top_hits) {\n  return AggsContainer_1.AggsContainer(key, {\n    top_hits: top_hits\n  });\n}\n\nexports.TopHitsMetric = TopHitsMetric;\n\nfunction GeoBoundsMetric(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    geo_bounds: assign({\n      field: field\n    }, options)\n  });\n}\n\nexports.GeoBoundsMetric = GeoBoundsMetric;","map":{"version":3,"sources":["../../../../../src/core/query/query_dsl/aggregations/MetricAggregations.ts"],"names":[],"mappings":";;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAM,MAAM,GAAG,OAAO,CAAC,eAAD,CAAtB;;AAEA,SAAgB,kBAAhB,CAAmC,QAAnC,EAA2C;AACzC,SAAO,UAAC,GAAD,EAAM,KAAN,EAAW;;;AAChB,WAAA,eAAA,CAAA,aAAA,CAAc,GAAd,GAAiB,EAAA,GAAA,EAAA,EACf,EAAA,CAAC,QAAD,CAAA,GAAY;AAAE,MAAA,KAAK,EAAA;AAAP,KADG,EAEf,EAFF,EAAA;AAEE,GAHJ;AAID;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA;AAOa,OAAA,CAAA,iBAAA,GAAoB,kBAAkB,CAAC,aAAD,CAAtC;AACA,OAAA,CAAA,SAAA,GAAY,kBAAkB,CAAC,KAAD,CAA9B;AACA,OAAA,CAAA,SAAA,GAAY,kBAAkB,CAAC,KAAD,CAA9B;AACA,OAAA,CAAA,SAAA,GAAY,kBAAkB,CAAC,KAAD,CAA9B;AACA,OAAA,CAAA,SAAA,GAAY,kBAAkB,CAAC,KAAD,CAA9B;AACA,OAAA,CAAA,WAAA,GAAc,kBAAkB,CAAC,OAAD,CAAhC;;AAUb,SAAgB,aAAhB,CAA8B,GAA9B,EAAmC,QAAnC,EAAiE;AAC/D,SAAO,eAAA,CAAA,aAAA,CAAc,GAAd,EAAmB;AAAE,IAAA,QAAQ,EAAA;AAAV,GAAnB,CAAP;AACD;;AAFD,OAAA,CAAA,aAAA,GAAA,aAAA;;AAIA,SAAgB,eAAhB,CAAgC,GAAhC,EAAqC,KAArC,EAA4C,OAA5C,EAAwD;AAAZ,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAY;;AACtD,SAAO,eAAA,CAAA,aAAA,CAAc,GAAd,EAAmB;AAAE,IAAA,UAAU,EAAE,MAAM,CAAC;AAAE,MAAA,KAAK,EAAA;AAAP,KAAD,EAAY,OAAZ;AAApB,GAAnB,CAAP;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar AggsContainer_1 = require(\"./AggsContainer\");\nvar assign = require('lodash/assign');\nfunction FieldMetricFactory(metricOp) {\n    return function (key, field) {\n        var _a;\n        return AggsContainer_1.AggsContainer(key, (_a = {},\n            _a[metricOp] = { field: field },\n            _a));\n    };\n}\nexports.FieldMetricFactory = FieldMetricFactory;\nexports.CardinalityMetric = FieldMetricFactory('cardinality');\nexports.MinMetric = FieldMetricFactory('min');\nexports.MaxMetric = FieldMetricFactory('max');\nexports.AvgMetric = FieldMetricFactory('avg');\nexports.SumMetric = FieldMetricFactory('sum');\nexports.StatsMetric = FieldMetricFactory('stats');\nfunction TopHitsMetric(key, top_hits) {\n    return AggsContainer_1.AggsContainer(key, { top_hits: top_hits });\n}\nexports.TopHitsMetric = TopHitsMetric;\nfunction GeoBoundsMetric(key, field, options) {\n    if (options === void 0) { options = {}; }\n    return AggsContainer_1.AggsContainer(key, { geo_bounds: assign({ field: field }, options) });\n}\nexports.GeoBoundsMetric = GeoBoundsMetric;\n//# sourceMappingURL=MetricAggregations.js.map"]},"metadata":{},"sourceType":"script"}